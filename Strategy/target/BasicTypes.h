
/* Program generated by Cadvanced 4.3.0  */
#define XSCT_CADVANCED

#ifndef XX_BasicTypes_H
#define XX_BasicTypes_H

/*************************************************************************
**                SECTION Types and Forward references                  **
*************************************************************************/

/*****
* PACKAGE BasicTypes
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun,4,1,9)
******/
extern XCONST struct xPackageIdStruct yPacR_z_BasicTypes__BasicTypes;

extern void yInit_BasicTypes (void);

/*****
* SYNONYM MaxXCoordinate
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,1,9)
******/
#define z_BasicTypes_1K_MaxXCoordinate SDL_INTEGER_LIT(200)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1K_MaxXCoordinate;
#endif

/*****
* SYNONYM MaxYCoordinate
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,2,9)
******/
#define z_BasicTypes_1L_MaxYCoordinate SDL_INTEGER_LIT(100)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1L_MaxYCoordinate;
#endif

/*****
* SYNONYM MaxWCPower
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,4,9)
******/
#define z_BasicTypes_1M_MaxWCPower SDL_INTEGER_LIT(30)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1M_MaxWCPower;
#endif

/*****
* SYNONYM MaxWCRange
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,5,9)
******/
#define z_BasicTypes_1N_MaxWCRange SDL_INTEGER_LIT(50)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1N_MaxWCRange;
#endif

/*****
* SYNONYM MaxWCSpeed
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,6,9)
******/
#define z_BasicTypes_1O_MaxWCSpeed SDL_INTEGER_LIT(30)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1O_MaxWCSpeed;
#endif

/*****
* SYNONYM MaxSCRange
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,8,9)
******/
#define z_BasicTypes_1P_MaxSCRange SDL_INTEGER_LIT(50)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1P_MaxSCRange;
#endif

/*****
* SYNONYM MaxSCMaxSpeed
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,9,9)
******/
#define z_BasicTypes_1Q_MaxSCMaxSpeed SDL_INTEGER_LIT(10)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1Q_MaxSCMaxSpeed;
#endif

/*****
* SYNONYM MaxSCMaxAcceleration
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,10,9)
******/
#define z_BasicTypes_1R_MaxSCMaxAcceleration SDL_INTEGER_LIT(5)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1R_MaxSCMaxAcceleration;
#endif

/*****
* SYNONYM MaxSCMaxResource
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,11,9)
******/
#define z_BasicTypes_1S_MaxSCMaxResource SDL_INTEGER_LIT(100)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1S_MaxSCMaxResource;
#endif

/*****
* SYNONYM MaxAAWeaponry
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,13,9)
******/
#define z_BasicTypes_1T_MaxAAWeaponry SDL_INTEGER_LIT(30)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1T_MaxAAWeaponry;
#endif

/*****
* SYNONYM MaxLUWeaponry
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,14,9)
******/
#define z_BasicTypes_1U_MaxLUWeaponry SDL_INTEGER_LIT(5)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1U_MaxLUWeaponry;
#endif

/*****
* SYNONYM MaxTypeBattleship
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,16,9)
******/
#define z_BasicTypes_1V_MaxTypeBattleship SDL_INTEGER_LIT(2)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1V_MaxTypeBattleship;
#endif

/*****
* SYNONYM MaxTypeCruiser
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,17,9)
******/
#define z_BasicTypes_1W_MaxTypeCruiser SDL_INTEGER_LIT(2)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1W_MaxTypeCruiser;
#endif

/*****
* SYNONYM MaxTypeDestroyer
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,18,9)
******/
#define z_BasicTypes_1X_MaxTypeDestroyer SDL_INTEGER_LIT(2)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1X_MaxTypeDestroyer;
#endif

/*****
* SYNONYM MaxTypeMissileCutter
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,19,9)
******/
#define z_BasicTypes_1Y_MaxTypeMissileCutter SDL_INTEGER_LIT(2)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1Y_MaxTypeMissileCutter;
#endif

/*****
* SYNONYM MaxTypeRepairBoat
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,20,9)
******/
#define z_BasicTypes_1Z_MaxTypeRepairBoat SDL_INTEGER_LIT(1)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1Z_MaxTypeRepairBoat;
#endif

/*****
* SYNONYM AmountStrategy
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Battleships\Config\ConfigFile.pr,22,9)
******/
#define z_BasicTypes_20_AmountStrategy SDL_INTEGER_LIT(2)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_20_AmountStrategy;
#endif

/*****
* SYNONYM sqrt2
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),455(80,130),1,9)
******/
#define z_BasicTypes_21_sqrt2 SDL_REAL_LIT(1.41421356, 1, 414213560)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_21_sqrt2;
#endif

/*****
* SYNTYPE tSCRange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_16_tSCRange;
typedef SDL_Integer  z_BasicTypes_16_tSCRange;

/*****
* SYNTYPE tSCMaxSpeed  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_17_tSCMaxSpeed;
typedef SDL_Integer  z_BasicTypes_17_tSCMaxSpeed;

/*****
* SYNTYPE tSCMaxAcceleration  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),7,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_18_tSCMaxAcceleration;
typedef SDL_Integer  z_BasicTypes_18_tSCMaxAcceleration;

/*****
* SYNTYPE tSCMaxResource  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),10,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_19_tSCMaxResource;
typedef SDL_Integer  z_BasicTypes_19_tSCMaxResource;

/*****
* SYNTYPE tWCPower  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1A_tWCPower;
typedef SDL_Integer  z_BasicTypes_1A_tWCPower;

/*****
* SYNTYPE tWCRange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1B_tWCRange;
typedef SDL_Integer  z_BasicTypes_1B_tWCRange;

/*****
* SYNTYPE tWCSpeed  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),7,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1C_tWCSpeed;
typedef SDL_Integer  z_BasicTypes_1C_tWCSpeed;

/*****
* SYNTYPE tAAWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),281(80,75),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1D_tAAWeaponry;
typedef SDL_Integer  z_BasicTypes_1D_tAAWeaponry;

/*****
* SYNTYPE tLUWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),281(80,75),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1E_tLUWeaponry;
typedef SDL_Integer  z_BasicTypes_1E_tLUWeaponry;

/*****
* SYNTYPE tXCoordinate  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),290(20,85),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1F_tXCoordinate;
typedef SDL_Integer  z_BasicTypes_1F_tXCoordinate;

/*****
* SYNTYPE tYCoordinate  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),290(20,85),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1G_tYCoordinate;
typedef SDL_Integer  z_BasicTypes_1G_tYCoordinate;

/*****
* SYNTYPE tFactorAcceleration  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),374(80,100),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1H_tFactorAcceleration;
typedef SDL_Real  z_BasicTypes_1H_tFactorAcceleration;

/*****
* SYNTYPE tShipId  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),407(20,110),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1I_tShipId;
typedef SDL_Integer  z_BasicTypes_1I_tShipId;

/*****
* SYNTYPE tStrategyId  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),413(80,115),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1J_tStrategyId;
typedef SDL_Integer  z_BasicTypes_1J_tStrategyId;

/*****
* NEWTYPE tHeading  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0P_tHeading;
typedef XENUM_TYPE z_BasicTypes_0P_tHeading;
#define z_BasicTypes_0P0_NORTH 0
#define z_BasicTypes_0P1_NORTH_EAST 1
#define z_BasicTypes_0P2_EAST 2
#define z_BasicTypes_0P3_SOUTH_EAST 3
#define z_BasicTypes_0P4_SOUTH 4
#define z_BasicTypes_0P5_SOUTH_WEST 5
#define z_BasicTypes_0P6_WEST 6
#define z_BasicTypes_0P7_NORTH_WEST 7

/*****
* NEWTYPE tDeep  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0Q_tDeep;
typedef XENUM_TYPE z_BasicTypes_0Q_tDeep;
#define z_BasicTypes_0Q0_LAND 0
#define z_BasicTypes_0Q1_FLEET 1
#define z_BasicTypes_0Q2_NORMAL 2
#define z_BasicTypes_0Q3_DEEPLY 3
#define z_BasicTypes_0Q4_VERY_DEEPLY 4

/*****
* NEWTYPE tNameWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0R_tNameWeaponry;
typedef XENUM_TYPE z_BasicTypes_0R_tNameWeaponry;
#define z_BasicTypes_0R0_MISSILE 0
#define z_BasicTypes_0R1_TORPEDO 1
#define z_BasicTypes_0R2_SHELL 2
#define z_BasicTypes_0R3_REPAIR 3

/*****
* NEWTYPE tNameShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0S_tNameShip;
typedef XENUM_TYPE z_BasicTypes_0S_tNameShip;
#define z_BasicTypes_0S0_BATTLESHIP 0
#define z_BasicTypes_0S1_CRUISER 1
#define z_BasicTypes_0S2_DESTROYER 2
#define z_BasicTypes_0S3_MISSILE_CUTTER 3
#define z_BasicTypes_0S4_REPAIR_BOAT 4

/*****
* NEWTYPE tHeadingChange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),359(20,175),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0T_tHeadingChange;
typedef XENUM_TYPE z_BasicTypes_0T_tHeadingChange;
#define z_BasicTypes_0T0_LEFT 0
#define z_BasicTypes_0T1_RIGHT 1

/*****
* NEWTYPE tCoordinates  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),287(20,40),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0U_tCoordinates;
typedef struct z_BasicTypes_0U_tCoordinates_s {
    z_BasicTypes_1F_tXCoordinate  x;
    z_BasicTypes_1G_tYCoordinate  y;
} z_BasicTypes_0U_tCoordinates;

/*****
* NEWTYPE tWeaponryCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),146(20,60),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0V_tWeaponryCharacter;
typedef struct z_BasicTypes_0V_tWeaponryCharacter_s {
    z_BasicTypes_1A_tWCPower  Power;
    z_BasicTypes_1B_tWCRange  Range;
    z_BasicTypes_1C_tWCSpeed  Speed;
} z_BasicTypes_0V_tWeaponryCharacter;

/*****
* NEWTYPE tEnemyShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),446(20,165),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0Y_tEnemyShip;
typedef struct z_BasicTypes_0Y_tEnemyShip_s {
    z_BasicTypes_1I_tShipId  ShipId;
    z_BasicTypes_1J_tStrategyId  StrategyId;
    z_BasicTypes_0S_tNameShip  TypeShip;
    z_BasicTypes_17_tSCMaxSpeed  Speed;
    z_BasicTypes_0P_tHeading  Heading;
    z_BasicTypes_0U_tCoordinates  Coordinates;
} z_BasicTypes_0Y_tEnemyShip;

/*****
* NEWTYPE tArrayWeaponryCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),215(20,40),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_0Z_tArrayWeaponryCharacter;
typedef struct {
    z_BasicTypes_0V_tWeaponryCharacter  A[4];
}  z_BasicTypes_0Z_tArrayWeaponryCharacter;

/*****
* NEWTYPE tArrayAmountAmmunition  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),344(20,70),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_11_tArrayAmountAmmunition;
typedef struct {
    z_BasicTypes_1D_tAAWeaponry  A[4];
}  z_BasicTypes_11_tArrayAmountAmmunition;

/*****
* NEWTYPE tArrayAmountLaunchUnit  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),341(20,85),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_12_tArrayAmountLaunchUnit;
typedef struct {
    z_BasicTypes_1E_tLUWeaponry  A[4];
}  z_BasicTypes_12_tArrayAmountLaunchUnit;

/*****
* NEWTYPE tStringEnemyShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),449(20,115),1,9)
******/
extern tSDLGenListInfo ySDL_z_BasicTypes_14_tStringEnemyShip;

typedef struct z_BasicTypes_14_tStringEnemyShip_ystruct *z_BasicTypes_14_tStringEnemyShip_yptr;
typedef struct z_BasicTypes_14_tStringEnemyShip_ystruct {
  z_BasicTypes_14_tStringEnemyShip_yptr Suc;
  z_BasicTypes_0Y_tEnemyShip Data;
} z_BasicTypes_14_tStringEnemyShip_yrec;
typedef struct {
  z_BasicTypes_14_tStringEnemyShip_yptr First;
  z_BasicTypes_14_tStringEnemyShip_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_14_tStringEnemyShip;

/*****
* NEWTYPE tStringShotsList  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),362(20,130),1,9)
******/
extern tSDLGenListInfo ySDL_z_BasicTypes_15_tStringShotsList;

typedef struct z_BasicTypes_15_tStringShotsList_ystruct *z_BasicTypes_15_tStringShotsList_yptr;
typedef struct z_BasicTypes_15_tStringShotsList_ystruct {
  z_BasicTypes_15_tStringShotsList_yptr Suc;
  z_BasicTypes_0U_tCoordinates Data;
} z_BasicTypes_15_tStringShotsList_yrec;
typedef struct {
  z_BasicTypes_15_tStringShotsList_yptr First;
  z_BasicTypes_15_tStringShotsList_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_15_tStringShotsList;

/*****
* NEWTYPE tShipCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),251(20,85),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0W_tShipCharacter;
typedef struct z_BasicTypes_0W_tShipCharacter_s {
    z_BasicTypes_16_tSCRange  Range;
    z_BasicTypes_17_tSCMaxSpeed  MaxSpeed;
    z_BasicTypes_18_tSCMaxAcceleration  MaxAcceleration;
    z_BasicTypes_19_tSCMaxResource  MaxResource;
    z_BasicTypes_11_tArrayAmountAmmunition  MaxAmmunition;
    z_BasicTypes_12_tArrayAmountLaunchUnit  MaxLaunchUnit;
    z_BasicTypes_0Q_tDeep  MaxDeep;
} z_BasicTypes_0W_tShipCharacter;

/*****
* NEWTYPE tShipCurrentState  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),401(20,125),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0X_tShipCurrentState;
typedef struct z_BasicTypes_0X_tShipCurrentState_s {
    z_BasicTypes_1I_tShipId  ShipId;
    z_BasicTypes_1J_tStrategyId  StrategyId;
    z_BasicTypes_0S_tNameShip  TypeShip;
    z_BasicTypes_17_tSCMaxSpeed  Speed;
    z_BasicTypes_0P_tHeading  Heading;
    z_BasicTypes_19_tSCMaxResource  Resource;
    z_BasicTypes_0U_tCoordinates  Coordinates;
    z_BasicTypes_11_tArrayAmountAmmunition  Ammunition;
} z_BasicTypes_0X_tShipCurrentState;

/*****
* NEWTYPE tArrayShipsCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),284(20,55),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_10_tArrayShipsCharacter;
typedef struct {
    z_BasicTypes_0W_tShipCharacter  A[5];
}  z_BasicTypes_10_tArrayShipsCharacter;

/*****
* NEWTYPE tStringShipCurrentState  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),404(20,100),1,9)
******/
extern tSDLGenListInfo ySDL_z_BasicTypes_13_tStringShipCurrentState;

typedef struct z_BasicTypes_13_tStringShipCurrentState_ystruct *z_BasicTypes_13_tStringShipCurrentState_yptr;
typedef struct z_BasicTypes_13_tStringShipCurrentState_ystruct {
  z_BasicTypes_13_tStringShipCurrentState_yptr Suc;
  z_BasicTypes_0X_tShipCurrentState Data;
} z_BasicTypes_13_tStringShipCurrentState_yrec;
typedef struct {
  z_BasicTypes_13_tStringShipCurrentState_yptr First;
  z_BasicTypes_13_tStringShipCurrentState_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_13_tStringShipCurrentState;

/*****
* SYNTYPE tSCRange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_16_tSCRange;
#define ySrtN_z_BasicTypes_16_tSCRange  (&ySrtR_z_BasicTypes_16_tSCRange)
#endif

#define yAssF_z_BasicTypes_16_tSCRange(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_16_tSCRange(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_16_tSCRange(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_16_tSCRange yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_16_tSCRange (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_16_tSCRange yTstA_z_BasicTypes_16_tSCRange (
  z_BasicTypes_16_tSCRange);
#else
#define yTstA_z_BasicTypes_16_tSCRange(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_16_tSCRange yTstI_z_BasicTypes_16_tSCRange (
  z_BasicTypes_16_tSCRange);
#else
#define yTstI_z_BasicTypes_16_tSCRange(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_16_tSCRange
#define ANY_z_BasicTypes_16_tSCRange (z_BasicTypes_16_tSCRange)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(50)+1))
#endif

/*****
* SYNTYPE tSCMaxSpeed  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_17_tSCMaxSpeed;
#define ySrtN_z_BasicTypes_17_tSCMaxSpeed  (&ySrtR_z_BasicTypes_17_tSCMaxSpeed)
#endif

#define yAssF_z_BasicTypes_17_tSCMaxSpeed(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_17_tSCMaxSpeed(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_17_tSCMaxSpeed(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_17_tSCMaxSpeed yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_17_tSCMaxSpeed (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_17_tSCMaxSpeed yTstA_z_BasicTypes_17_tSCMaxSpeed (
  z_BasicTypes_17_tSCMaxSpeed);
#else
#define yTstA_z_BasicTypes_17_tSCMaxSpeed(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_17_tSCMaxSpeed yTstI_z_BasicTypes_17_tSCMaxSpeed (
  z_BasicTypes_17_tSCMaxSpeed);
#else
#define yTstI_z_BasicTypes_17_tSCMaxSpeed(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_17_tSCMaxSpeed
#define ANY_z_BasicTypes_17_tSCMaxSpeed (z_BasicTypes_17_tSCMaxSpeed)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(10)+1))
#endif

/*****
* SYNTYPE tSCMaxAcceleration  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),7,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_18_tSCMaxAcceleration;
#define ySrtN_z_BasicTypes_18_tSCMaxAcceleration  (&ySrtR_z_BasicTypes_18_tSCMaxAcceleration)
#endif

#define yAssF_z_BasicTypes_18_tSCMaxAcceleration(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_18_tSCMaxAcceleration(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_18_tSCMaxAcceleration(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_18_tSCMaxAcceleration yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_18_tSCMaxAcceleration (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_18_tSCMaxAcceleration
  yTstA_z_BasicTypes_18_tSCMaxAcceleration (z_BasicTypes_18_tSCMaxAcceleration);
#else
#define yTstA_z_BasicTypes_18_tSCMaxAcceleration(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_18_tSCMaxAcceleration
  yTstI_z_BasicTypes_18_tSCMaxAcceleration (z_BasicTypes_18_tSCMaxAcceleration);
#else
#define yTstI_z_BasicTypes_18_tSCMaxAcceleration(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_18_tSCMaxAcceleration
#define ANY_z_BasicTypes_18_tSCMaxAcceleration (z_BasicTypes_18_tSCMaxAcceleration)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(5)+1))
#endif

/*****
* SYNTYPE tSCMaxResource  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),10,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_19_tSCMaxResource;
#define ySrtN_z_BasicTypes_19_tSCMaxResource  (&ySrtR_z_BasicTypes_19_tSCMaxResource)
#endif

#define yAssF_z_BasicTypes_19_tSCMaxResource(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_19_tSCMaxResource(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_19_tSCMaxResource(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_19_tSCMaxResource yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_19_tSCMaxResource (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_19_tSCMaxResource yTstA_z_BasicTypes_19_tSCMaxResource (
  z_BasicTypes_19_tSCMaxResource);
#else
#define yTstA_z_BasicTypes_19_tSCMaxResource(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_19_tSCMaxResource yTstI_z_BasicTypes_19_tSCMaxResource (
  z_BasicTypes_19_tSCMaxResource);
#else
#define yTstI_z_BasicTypes_19_tSCMaxResource(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_19_tSCMaxResource
#define ANY_z_BasicTypes_19_tSCMaxResource (z_BasicTypes_19_tSCMaxResource)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(100)+1))
#endif

/*****
* SYNTYPE tWCPower  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1A_tWCPower;
#define ySrtN_z_BasicTypes_1A_tWCPower  (&ySrtR_z_BasicTypes_1A_tWCPower)
#endif

#define yAssF_z_BasicTypes_1A_tWCPower(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1A_tWCPower(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1A_tWCPower(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1A_tWCPower yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1A_tWCPower (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1A_tWCPower yTstA_z_BasicTypes_1A_tWCPower (
  z_BasicTypes_1A_tWCPower);
#else
#define yTstA_z_BasicTypes_1A_tWCPower(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1A_tWCPower yTstI_z_BasicTypes_1A_tWCPower (
  z_BasicTypes_1A_tWCPower);
#else
#define yTstI_z_BasicTypes_1A_tWCPower(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1A_tWCPower
#define ANY_z_BasicTypes_1A_tWCPower (z_BasicTypes_1A_tWCPower)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(30)+1))
#endif

/*****
* SYNTYPE tWCRange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1B_tWCRange;
#define ySrtN_z_BasicTypes_1B_tWCRange  (&ySrtR_z_BasicTypes_1B_tWCRange)
#endif

#define yAssF_z_BasicTypes_1B_tWCRange(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1B_tWCRange(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1B_tWCRange(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1B_tWCRange yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1B_tWCRange (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1B_tWCRange yTstA_z_BasicTypes_1B_tWCRange (
  z_BasicTypes_1B_tWCRange);
#else
#define yTstA_z_BasicTypes_1B_tWCRange(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1B_tWCRange yTstI_z_BasicTypes_1B_tWCRange (
  z_BasicTypes_1B_tWCRange);
#else
#define yTstI_z_BasicTypes_1B_tWCRange(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1B_tWCRange
#define ANY_z_BasicTypes_1B_tWCRange (z_BasicTypes_1B_tWCRange)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(50)+1))
#endif

/*****
* SYNTYPE tWCSpeed  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),7,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1C_tWCSpeed;
#define ySrtN_z_BasicTypes_1C_tWCSpeed  (&ySrtR_z_BasicTypes_1C_tWCSpeed)
#endif

#define yAssF_z_BasicTypes_1C_tWCSpeed(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1C_tWCSpeed(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1C_tWCSpeed(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1C_tWCSpeed yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1C_tWCSpeed (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1C_tWCSpeed yTstA_z_BasicTypes_1C_tWCSpeed (
  z_BasicTypes_1C_tWCSpeed);
#else
#define yTstA_z_BasicTypes_1C_tWCSpeed(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1C_tWCSpeed yTstI_z_BasicTypes_1C_tWCSpeed (
  z_BasicTypes_1C_tWCSpeed);
#else
#define yTstI_z_BasicTypes_1C_tWCSpeed(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1C_tWCSpeed
#define ANY_z_BasicTypes_1C_tWCSpeed (z_BasicTypes_1C_tWCSpeed)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(30)+1))
#endif

/*****
* SYNTYPE tAAWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),281(80,75),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1D_tAAWeaponry;
#define ySrtN_z_BasicTypes_1D_tAAWeaponry  (&ySrtR_z_BasicTypes_1D_tAAWeaponry)
#endif

#define yAssF_z_BasicTypes_1D_tAAWeaponry(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1D_tAAWeaponry(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1D_tAAWeaponry(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1D_tAAWeaponry yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1D_tAAWeaponry (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1D_tAAWeaponry yTstA_z_BasicTypes_1D_tAAWeaponry (
  z_BasicTypes_1D_tAAWeaponry);
#else
#define yTstA_z_BasicTypes_1D_tAAWeaponry(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1D_tAAWeaponry yTstI_z_BasicTypes_1D_tAAWeaponry (
  z_BasicTypes_1D_tAAWeaponry);
#else
#define yTstI_z_BasicTypes_1D_tAAWeaponry(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1D_tAAWeaponry
#define ANY_z_BasicTypes_1D_tAAWeaponry (z_BasicTypes_1D_tAAWeaponry)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(30)+1))
#endif

/*****
* SYNTYPE tLUWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),281(80,75),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1E_tLUWeaponry;
#define ySrtN_z_BasicTypes_1E_tLUWeaponry  (&ySrtR_z_BasicTypes_1E_tLUWeaponry)
#endif

#define yAssF_z_BasicTypes_1E_tLUWeaponry(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1E_tLUWeaponry(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1E_tLUWeaponry(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1E_tLUWeaponry yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1E_tLUWeaponry (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1E_tLUWeaponry yTstA_z_BasicTypes_1E_tLUWeaponry (
  z_BasicTypes_1E_tLUWeaponry);
#else
#define yTstA_z_BasicTypes_1E_tLUWeaponry(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1E_tLUWeaponry yTstI_z_BasicTypes_1E_tLUWeaponry (
  z_BasicTypes_1E_tLUWeaponry);
#else
#define yTstI_z_BasicTypes_1E_tLUWeaponry(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1E_tLUWeaponry
#define ANY_z_BasicTypes_1E_tLUWeaponry (z_BasicTypes_1E_tLUWeaponry)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(5)+1))
#endif

/*****
* SYNTYPE tXCoordinate  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),290(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1F_tXCoordinate;
#define ySrtN_z_BasicTypes_1F_tXCoordinate  (&ySrtR_z_BasicTypes_1F_tXCoordinate)
#endif

#define yAssF_z_BasicTypes_1F_tXCoordinate(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1F_tXCoordinate(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1F_tXCoordinate(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1F_tXCoordinate yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1F_tXCoordinate (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1F_tXCoordinate yTstA_z_BasicTypes_1F_tXCoordinate (
  z_BasicTypes_1F_tXCoordinate);
#else
#define yTstA_z_BasicTypes_1F_tXCoordinate(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1F_tXCoordinate yTstI_z_BasicTypes_1F_tXCoordinate (
  z_BasicTypes_1F_tXCoordinate);
#else
#define yTstI_z_BasicTypes_1F_tXCoordinate(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1F_tXCoordinate
#define ANY_z_BasicTypes_1F_tXCoordinate (z_BasicTypes_1F_tXCoordinate)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(200)+1))
#endif

/*****
* SYNTYPE tYCoordinate  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),290(20,85),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1G_tYCoordinate;
#define ySrtN_z_BasicTypes_1G_tYCoordinate  (&ySrtR_z_BasicTypes_1G_tYCoordinate)
#endif

#define yAssF_z_BasicTypes_1G_tYCoordinate(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1G_tYCoordinate(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1G_tYCoordinate(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1G_tYCoordinate yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1G_tYCoordinate (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1G_tYCoordinate yTstA_z_BasicTypes_1G_tYCoordinate (
  z_BasicTypes_1G_tYCoordinate);
#else
#define yTstA_z_BasicTypes_1G_tYCoordinate(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1G_tYCoordinate yTstI_z_BasicTypes_1G_tYCoordinate (
  z_BasicTypes_1G_tYCoordinate);
#else
#define yTstI_z_BasicTypes_1G_tYCoordinate(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1G_tYCoordinate
#define ANY_z_BasicTypes_1G_tYCoordinate (z_BasicTypes_1G_tYCoordinate)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(100)+1))
#endif

/*****
* SYNTYPE tFactorAcceleration  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),374(80,100),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1H_tFactorAcceleration;
#define ySrtN_z_BasicTypes_1H_tFactorAcceleration  (&ySrtR_z_BasicTypes_1H_tFactorAcceleration)
#endif

#define yAssF_z_BasicTypes_1H_tFactorAcceleration(V,E,A)  yAssF_SDL_Real(V,E,A)
#define yEqF_z_BasicTypes_1H_tFactorAcceleration(Expr1,Expr2)  yEqF_SDL_Real(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1H_tFactorAcceleration(Expr1,Expr2)  yNEqF_SDL_Real(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1H_tFactorAcceleration yMkAddr_SDL_Real
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1H_tFactorAcceleration (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1H_tFactorAcceleration
  yTstA_z_BasicTypes_1H_tFactorAcceleration (
  z_BasicTypes_1H_tFactorAcceleration);
#else
#define yTstA_z_BasicTypes_1H_tFactorAcceleration(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1H_tFactorAcceleration
  yTstI_z_BasicTypes_1H_tFactorAcceleration (
  z_BasicTypes_1H_tFactorAcceleration);
#else
#define yTstI_z_BasicTypes_1H_tFactorAcceleration(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1H_tFactorAcceleration
#define ANY_z_BasicTypes_1H_tFactorAcceleration ANY_for_syntype_tFactorAcceleration_not_implemented
#endif

/*****
* SYNTYPE tShipId  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),407(20,110),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1I_tShipId;
#define ySrtN_z_BasicTypes_1I_tShipId  (&ySrtR_z_BasicTypes_1I_tShipId)
#endif

#define yAssF_z_BasicTypes_1I_tShipId(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1I_tShipId(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1I_tShipId(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1I_tShipId yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1I_tShipId (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1I_tShipId yTstA_z_BasicTypes_1I_tShipId (
  z_BasicTypes_1I_tShipId);
#else
#define yTstA_z_BasicTypes_1I_tShipId(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1I_tShipId yTstI_z_BasicTypes_1I_tShipId (
  z_BasicTypes_1I_tShipId);
#else
#define yTstI_z_BasicTypes_1I_tShipId(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1I_tShipId
#define ANY_z_BasicTypes_1I_tShipId (z_BasicTypes_1I_tShipId)(SDL_INTEGER_LIT(1) + \
  GETINTRAND%(SDL_INTEGER_LIT(18) - SDL_INTEGER_LIT(1)+1))
#endif

/*****
* SYNTYPE tStrategyId  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),413(80,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1J_tStrategyId;
#define ySrtN_z_BasicTypes_1J_tStrategyId  (&ySrtR_z_BasicTypes_1J_tStrategyId)
#endif

#define yAssF_z_BasicTypes_1J_tStrategyId(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1J_tStrategyId(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1J_tStrategyId(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1J_tStrategyId yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1J_tStrategyId (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1J_tStrategyId yTstA_z_BasicTypes_1J_tStrategyId (
  z_BasicTypes_1J_tStrategyId);
#else
#define yTstA_z_BasicTypes_1J_tStrategyId(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1J_tStrategyId yTstI_z_BasicTypes_1J_tStrategyId (
  z_BasicTypes_1J_tStrategyId);
#else
#define yTstI_z_BasicTypes_1J_tStrategyId(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1J_tStrategyId
#define ANY_z_BasicTypes_1J_tStrategyId (z_BasicTypes_1J_tStrategyId)(SDL_INTEGER_LIT(1) + \
  GETINTRAND%(SDL_INTEGER_LIT(2) - SDL_INTEGER_LIT(1)+1))
#endif

/*****
* NEWTYPE tHeading  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0P_tHeading;
#define ySrtN_z_BasicTypes_0P_tHeading  (&ySrtR_z_BasicTypes_0P_tHeading)
#endif

#define yAssF_z_BasicTypes_0P_tHeading(V,E,A)  V = E
#define yEqF_z_BasicTypes_0P_tHeading(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0P_tHeading(Expr1,Expr2)  (Expr1) != (Expr2)
#define yMkAddr_z_BasicTypes_0P_tHeading yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0P_tHeading
#define ANY_z_BasicTypes_0P_tHeading (z_BasicTypes_0P_tHeading)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0P7_NORTH_WEST)+1))
#endif
#define z_BasicTypes_0PD_copy(P)  P

/*****
* OPERATOR h2i
* <<PACKAGE BasicTypes/TYPE tHeading>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),14,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0PE_h2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0PE_h2i;
#define yPrdN_z_BasicTypes_0PE_h2i  (&yPrdR_z_BasicTypes_0PE_h2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0PE_h2i  9
extern char * yRef_z_BasicTypes_0PE_h2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),15,10) */
    z_BasicTypes_0P_tHeading z_BasicTypes_0PE0_lit;
    SDL_Integer *z_BasicTypes_0PE_ProcedureResult;
    z_BasicTypes_0P_tHeading  yDcn_z_BasicTypes_0P_tHeading;
} yVDef_z_BasicTypes_0PE_h2i;
typedef yVDef_z_BasicTypes_0PE_h2i  *yVDP_z_BasicTypes_0PE_h2i;
extern void yFree_z_BasicTypes_0PE_h2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR h2i>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),15,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0PE0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR h2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0PE_ProcedureResult;
#endif

/*****
* OPERATOR i2h
* <<PACKAGE BasicTypes/TYPE tHeading>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),17,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0PF_i2h)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0PF_i2h;
#define yPrdN_z_BasicTypes_0PF_i2h  (&yPrdR_z_BasicTypes_0PF_i2h)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0PF_i2h  9
extern char * yRef_z_BasicTypes_0PF_i2h (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),18,10) */
    SDL_Integer z_BasicTypes_0PF0_int;
    z_BasicTypes_0P_tHeading *z_BasicTypes_0PF_ProcedureResult;
} yVDef_z_BasicTypes_0PF_i2h;
typedef yVDef_z_BasicTypes_0PF_i2h  *yVDP_z_BasicTypes_0PF_i2h;
extern void yFree_z_BasicTypes_0PF_i2h (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR i2h>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),18,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0PF0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR i2h>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0PF_ProcedureResult;
#endif

/*****
* NEWTYPE tDeep  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0Q_tDeep;
#define ySrtN_z_BasicTypes_0Q_tDeep  (&ySrtR_z_BasicTypes_0Q_tDeep)
#endif

#define yAssF_z_BasicTypes_0Q_tDeep(V,E,A)  V = E
#define yEqF_z_BasicTypes_0Q_tDeep(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0Q_tDeep(Expr1,Expr2)  (Expr1) != (Expr2)
#define yMkAddr_z_BasicTypes_0Q_tDeep yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0Q_tDeep
#define ANY_z_BasicTypes_0Q_tDeep (z_BasicTypes_0Q_tDeep)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0Q4_VERY_DEEPLY)+1))
#endif
#define z_BasicTypes_0QA_copy(P)  P

/*****
* OPERATOR d2i
* <<PACKAGE BasicTypes/TYPE tDeep>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),11,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0QB_d2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0QB_d2i;
#define yPrdN_z_BasicTypes_0QB_d2i  (&yPrdR_z_BasicTypes_0QB_d2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0QB_d2i  6
extern char * yRef_z_BasicTypes_0QB_d2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),12,10) */
    z_BasicTypes_0Q_tDeep z_BasicTypes_0QB0_lit;
    SDL_Integer *z_BasicTypes_0QB_ProcedureResult;
    z_BasicTypes_0Q_tDeep  yDcn_z_BasicTypes_0Q_tDeep;
} yVDef_z_BasicTypes_0QB_d2i;
typedef yVDef_z_BasicTypes_0QB_d2i  *yVDP_z_BasicTypes_0QB_d2i;
extern void yFree_z_BasicTypes_0QB_d2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR d2i>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),12,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QB0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR d2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QB_ProcedureResult;
#endif

/*****
* OPERATOR i2d
* <<PACKAGE BasicTypes/TYPE tDeep>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),14,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0QC_i2d)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0QC_i2d;
#define yPrdN_z_BasicTypes_0QC_i2d  (&yPrdR_z_BasicTypes_0QC_i2d)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0QC_i2d  6
extern char * yRef_z_BasicTypes_0QC_i2d (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),15,10) */
    SDL_Integer z_BasicTypes_0QC0_int;
    z_BasicTypes_0Q_tDeep *z_BasicTypes_0QC_ProcedureResult;
} yVDef_z_BasicTypes_0QC_i2d;
typedef yVDef_z_BasicTypes_0QC_i2d  *yVDP_z_BasicTypes_0QC_i2d;
extern void yFree_z_BasicTypes_0QC_i2d (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR i2d>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),15,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QC0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR i2d>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QC_ProcedureResult;
#endif

/*****
* NEWTYPE tNameWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0R_tNameWeaponry;
#define ySrtN_z_BasicTypes_0R_tNameWeaponry  (&ySrtR_z_BasicTypes_0R_tNameWeaponry)
#endif

#define yAssF_z_BasicTypes_0R_tNameWeaponry(V,E,A)  V = E
#define yEqF_z_BasicTypes_0R_tNameWeaponry(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0R_tNameWeaponry(Expr1,Expr2)  (Expr1) != (Expr2)
#define yMkAddr_z_BasicTypes_0R_tNameWeaponry yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0R_tNameWeaponry
#define ANY_z_BasicTypes_0R_tNameWeaponry (z_BasicTypes_0R_tNameWeaponry)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0R3_REPAIR)+1))
#endif
#define z_BasicTypes_0R9_copy(P)  P

/*****
* OPERATOR nw2i
* <<PACKAGE BasicTypes/TYPE tNameWeaponry>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),10,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0RA_nw2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0RA_nw2i;
#define yPrdN_z_BasicTypes_0RA_nw2i  (&yPrdR_z_BasicTypes_0RA_nw2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0RA_nw2i  5
extern char * yRef_z_BasicTypes_0RA_nw2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),11,10) */
    z_BasicTypes_0R_tNameWeaponry z_BasicTypes_0RA0_lit;
    SDL_Integer *z_BasicTypes_0RA_ProcedureResult;
    z_BasicTypes_0R_tNameWeaponry  yDcn_z_BasicTypes_0R_tNameWeaponry;
} yVDef_z_BasicTypes_0RA_nw2i;
typedef yVDef_z_BasicTypes_0RA_nw2i  *yVDP_z_BasicTypes_0RA_nw2i;
extern void yFree_z_BasicTypes_0RA_nw2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR nw2i>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),11,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RA0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR nw2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RA_ProcedureResult;
#endif

/*****
* OPERATOR i2nw
* <<PACKAGE BasicTypes/TYPE tNameWeaponry>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),13,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0RB_i2nw)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0RB_i2nw;
#define yPrdN_z_BasicTypes_0RB_i2nw  (&yPrdR_z_BasicTypes_0RB_i2nw)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0RB_i2nw  5
extern char * yRef_z_BasicTypes_0RB_i2nw (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),14,10) */
    SDL_Integer z_BasicTypes_0RB0_int;
    z_BasicTypes_0R_tNameWeaponry *z_BasicTypes_0RB_ProcedureResult;
} yVDef_z_BasicTypes_0RB_i2nw;
typedef yVDef_z_BasicTypes_0RB_i2nw  *yVDP_z_BasicTypes_0RB_i2nw;
extern void yFree_z_BasicTypes_0RB_i2nw (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR i2nw>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),14,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RB0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR i2nw>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RB_ProcedureResult;
#endif

/*****
* NEWTYPE tNameShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0S_tNameShip;
#define ySrtN_z_BasicTypes_0S_tNameShip  (&ySrtR_z_BasicTypes_0S_tNameShip)
#endif

#define yAssF_z_BasicTypes_0S_tNameShip(V,E,A)  V = E
#define yEqF_z_BasicTypes_0S_tNameShip(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0S_tNameShip(Expr1,Expr2)  (Expr1) != (Expr2)
#define yMkAddr_z_BasicTypes_0S_tNameShip yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0S_tNameShip
#define ANY_z_BasicTypes_0S_tNameShip (z_BasicTypes_0S_tNameShip)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0S4_REPAIR_BOAT)+1))
#endif
#define z_BasicTypes_0SA_copy(P)  P

/*****
* OPERATOR ns2i
* <<PACKAGE BasicTypes/TYPE tNameShip>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),11,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0SB_ns2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0SB_ns2i;
#define yPrdN_z_BasicTypes_0SB_ns2i  (&yPrdR_z_BasicTypes_0SB_ns2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0SB_ns2i  6
extern char * yRef_z_BasicTypes_0SB_ns2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),12,10) */
    z_BasicTypes_0S_tNameShip z_BasicTypes_0SB0_lit;
    SDL_Integer *z_BasicTypes_0SB_ProcedureResult;
    z_BasicTypes_0S_tNameShip  yDcn_z_BasicTypes_0S_tNameShip;
} yVDef_z_BasicTypes_0SB_ns2i;
typedef yVDef_z_BasicTypes_0SB_ns2i  *yVDP_z_BasicTypes_0SB_ns2i;
extern void yFree_z_BasicTypes_0SB_ns2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR ns2i>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),12,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SB0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR ns2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SB_ProcedureResult;
#endif

/*****
* OPERATOR i2ns
* <<PACKAGE BasicTypes/TYPE tNameShip>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),14,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0SC_i2ns)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0SC_i2ns;
#define yPrdN_z_BasicTypes_0SC_i2ns  (&yPrdR_z_BasicTypes_0SC_i2ns)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0SC_i2ns  6
extern char * yRef_z_BasicTypes_0SC_i2ns (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),15,10) */
    SDL_Integer z_BasicTypes_0SC0_int;
    z_BasicTypes_0S_tNameShip *z_BasicTypes_0SC_ProcedureResult;
} yVDef_z_BasicTypes_0SC_i2ns;
typedef yVDef_z_BasicTypes_0SC_i2ns  *yVDP_z_BasicTypes_0SC_i2ns;
extern void yFree_z_BasicTypes_0SC_i2ns (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR i2ns>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),15,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SC0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR i2ns>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SC_ProcedureResult;
#endif

/*****
* NEWTYPE tHeadingChange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),359(20,175),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0T_tHeadingChange;
#define ySrtN_z_BasicTypes_0T_tHeadingChange  (&ySrtR_z_BasicTypes_0T_tHeadingChange)
#endif

#define yAssF_z_BasicTypes_0T_tHeadingChange(V,E,A)  V = E
#define yEqF_z_BasicTypes_0T_tHeadingChange(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0T_tHeadingChange(Expr1,Expr2)  (Expr1) != (Expr2)
#define yMkAddr_z_BasicTypes_0T_tHeadingChange yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0T_tHeadingChange
#define ANY_z_BasicTypes_0T_tHeadingChange (z_BasicTypes_0T_tHeadingChange)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0T1_RIGHT)+1))
#endif
#define z_BasicTypes_0T5_copy(P)  P

/*****
* NEWTYPE tCoordinates  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),287(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0U_tCoordinates;
#define ySrtN_z_BasicTypes_0U_tCoordinates  (&ySrtR_z_BasicTypes_0U_tCoordinates)
#endif

#define yAssF_z_BasicTypes_0U_tCoordinates(V,E,A)  V = *(z_BasicTypes_0U_tCoordinates *)(E)
#define yEq_z_BasicTypes_0U_tCoordinates(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0U_tCoordinates)
#define yEqF_z_BasicTypes_0U_tCoordinates(Expr1,Expr2)  yEq_z_BasicTypes_0U_tCoordinates(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0U_tCoordinates(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0U_tCoordinates(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_0U_tCoordinates
#define ANY_z_BasicTypes_0U_tCoordinates(R) (z_BasicTypes_0U_tCoordinates *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0U_tCoordinates)
#endif
#define z_BasicTypes_0U3_copy(P)  P

/*****
* NEWTYPE tWeaponryCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),146(20,60),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0V_tWeaponryCharacter;
#define ySrtN_z_BasicTypes_0V_tWeaponryCharacter  (&ySrtR_z_BasicTypes_0V_tWeaponryCharacter)
#endif

#define yAssF_z_BasicTypes_0V_tWeaponryCharacter(V,E,A)  V = *(z_BasicTypes_0V_tWeaponryCharacter *)(E)
#define yEq_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0V_tWeaponryCharacter)
#define yEqF_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2)  yEq_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_0V_tWeaponryCharacter
#define ANY_z_BasicTypes_0V_tWeaponryCharacter(R) (z_BasicTypes_0V_tWeaponryCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0V_tWeaponryCharacter)
#endif
#define z_BasicTypes_0V3_copy(P)  P

/*****
* NEWTYPE tShipCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),251(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0W_tShipCharacter;
#define ySrtN_z_BasicTypes_0W_tShipCharacter  (&ySrtR_z_BasicTypes_0W_tShipCharacter)
#endif

#define yAssF_z_BasicTypes_0W_tShipCharacter(V,E,A)  V = *(z_BasicTypes_0W_tShipCharacter *)(E)
#define yEq_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0W_tShipCharacter)
#define yEqF_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2)  yEq_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_0W_tShipCharacter
#define ANY_z_BasicTypes_0W_tShipCharacter(R) (z_BasicTypes_0W_tShipCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0W_tShipCharacter)
#endif
#define z_BasicTypes_0W3_copy(P)  P

/*****
* NEWTYPE tShipCurrentState  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),401(20,125),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0X_tShipCurrentState;
#define ySrtN_z_BasicTypes_0X_tShipCurrentState  (&ySrtR_z_BasicTypes_0X_tShipCurrentState)
#endif

#define yAssF_z_BasicTypes_0X_tShipCurrentState(V,E,A)  V = *(z_BasicTypes_0X_tShipCurrentState *)(E)
#define yEq_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0X_tShipCurrentState)
#define yEqF_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2)  yEq_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_0X_tShipCurrentState
#define ANY_z_BasicTypes_0X_tShipCurrentState(R) (z_BasicTypes_0X_tShipCurrentState *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0X_tShipCurrentState)
#endif
#define z_BasicTypes_0X3_copy(P)  P

/*****
* NEWTYPE tEnemyShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),446(20,165),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0Y_tEnemyShip;
#define ySrtN_z_BasicTypes_0Y_tEnemyShip  (&ySrtR_z_BasicTypes_0Y_tEnemyShip)
#endif

#define yAssF_z_BasicTypes_0Y_tEnemyShip(V,E,A)  V = *(z_BasicTypes_0Y_tEnemyShip *)(E)
#define yEq_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0Y_tEnemyShip)
#define yEqF_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2)  yEq_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_0Y_tEnemyShip
#define ANY_z_BasicTypes_0Y_tEnemyShip(R) (z_BasicTypes_0Y_tEnemyShip *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0Y_tEnemyShip)
#endif
#define z_BasicTypes_0Y3_copy(P)  P

/*****
* NEWTYPE tArrayWeaponryCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),215(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0Z_tArrayWeaponryCharacter;
#define ySrtN_z_BasicTypes_0Z_tArrayWeaponryCharacter  (&ySrtR_z_BasicTypes_0Z_tArrayWeaponryCharacter)
#endif

#define yAssF_z_BasicTypes_0Z_tArrayWeaponryCharacter(V,E,A)  V = *(z_BasicTypes_0Z_tArrayWeaponryCharacter *)(E)
#define yEq_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0Z_tArrayWeaponryCharacter)
#define yEqF_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2)  yEq_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_0Z_tArrayWeaponryCharacter
#define ANY_z_BasicTypes_0Z_tArrayWeaponryCharacter(R) (z_BasicTypes_0Z_tArrayWeaponryCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0Z_tArrayWeaponryCharacter)
#endif
#define z_BasicTypes_0Z6_copy(P)  P

/*****
* NEWTYPE tArrayShipsCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),284(20,55),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_10_tArrayShipsCharacter;
#define ySrtN_z_BasicTypes_10_tArrayShipsCharacter  (&ySrtR_z_BasicTypes_10_tArrayShipsCharacter)
#endif

#define yAssF_z_BasicTypes_10_tArrayShipsCharacter(V,E,A)  V = *(z_BasicTypes_10_tArrayShipsCharacter *)(E)
#define yEq_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_10_tArrayShipsCharacter)
#define yEqF_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2)  yEq_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_10_tArrayShipsCharacter
#define ANY_z_BasicTypes_10_tArrayShipsCharacter(R) (z_BasicTypes_10_tArrayShipsCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_10_tArrayShipsCharacter)
#endif
#define z_BasicTypes_106_copy(P)  P

/*****
* NEWTYPE tArrayAmountAmmunition  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),344(20,70),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_11_tArrayAmountAmmunition;
#define ySrtN_z_BasicTypes_11_tArrayAmountAmmunition  (&ySrtR_z_BasicTypes_11_tArrayAmountAmmunition)
#endif

#define yAssF_z_BasicTypes_11_tArrayAmountAmmunition(V,E,A)  V = *(z_BasicTypes_11_tArrayAmountAmmunition *)(E)
#define yEq_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_11_tArrayAmountAmmunition)
#define yEqF_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2)  yEq_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2)
#define yNEqF_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2)  ( ! yEq_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_11_tArrayAmountAmmunition
#define ANY_z_BasicTypes_11_tArrayAmountAmmunition(R) (z_BasicTypes_11_tArrayAmountAmmunition *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_11_tArrayAmountAmmunition)
#endif
#define z_BasicTypes_116_copy(P)  P

/*****
* NEWTYPE tArrayAmountLaunchUnit  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),341(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_12_tArrayAmountLaunchUnit;
#define ySrtN_z_BasicTypes_12_tArrayAmountLaunchUnit  (&ySrtR_z_BasicTypes_12_tArrayAmountLaunchUnit)
#endif

#define yAssF_z_BasicTypes_12_tArrayAmountLaunchUnit(V,E,A)  V = *(z_BasicTypes_12_tArrayAmountLaunchUnit *)(E)
#define yEq_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_12_tArrayAmountLaunchUnit)
#define yEqF_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2)  yEq_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2)
#define yNEqF_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2)  ( ! yEq_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_12_tArrayAmountLaunchUnit
#define ANY_z_BasicTypes_12_tArrayAmountLaunchUnit(R) (z_BasicTypes_12_tArrayAmountLaunchUnit *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_12_tArrayAmountLaunchUnit)
#endif
#define z_BasicTypes_126_copy(P)  P

/*****
* NEWTYPE tStringShipCurrentState  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),404(20,100),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_13_tStringShipCurrentState;
#define ySrtN_z_BasicTypes_13_tStringShipCurrentState  (&ySrtR_z_BasicTypes_13_tStringShipCurrentState)
#endif

#define yEmptystring_z_BasicTypes_13_tStringShipCurrentState(Result) GenString_Emptystring(&ySDL_z_BasicTypes_13_tStringShipCurrentState,Result)
#define yMkString_z_BasicTypes_13_tStringShipCurrentState(P1,Result) (z_BasicTypes_13_tStringShipCurrentState *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_13_tStringShipCurrentState,(xString_Type *)Result)
#define yLength_z_BasicTypes_13_tStringShipCurrentState(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_13_tStringShipCurrentState)
#define yFirst_z_BasicTypes_13_tStringShipCurrentState(P1,Result) (z_BasicTypes_0X_tShipCurrentState*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_13_tStringShipCurrentState,Result)
#define yLast_z_BasicTypes_13_tStringShipCurrentState(P1,Result) (z_BasicTypes_0X_tShipCurrentState*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_13_tStringShipCurrentState,Result)
#define yConcat_z_BasicTypes_13_tStringShipCurrentState(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_13_tStringShipCurrentState,(xString_Type *)Result)
#define ySubString_z_BasicTypes_13_tStringShipCurrentState(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_13_tStringShipCurrentState,(xString_Type *)Result)
#define yAppend_z_BasicTypes_13_tStringShipCurrentState(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_13_tStringShipCurrentState)
#define z_BasicTypes_130_empty yEmptystring_z_BasicTypes_13_tStringShipCurrentState

#define yAss_z_BasicTypes_13_tStringShipCurrentState(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_13_tStringShipCurrentState)
#define yAssF_z_BasicTypes_13_tStringShipCurrentState(V,E,A)  yAss_z_BasicTypes_13_tStringShipCurrentState(&(V),E,A)
#define yEq_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_13_tStringShipCurrentState)
#define yEqF_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2)  yEq_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2)
#define yNEqF_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2)  ( ! yEq_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2) )
#define yFree_z_BasicTypes_13_tStringShipCurrentState(P) GenericFreeSort((void **)P, (tSDLTypeInfo *)&ySDL_z_BasicTypes_13_tStringShipCurrentState)
#define yExtr_z_BasicTypes_13_tStringShipCurrentState(V1,V2) ((z_BasicTypes_0X_tShipCurrentState *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_13_tStringShipCurrentState))
#define yAddr_z_BasicTypes_13_tStringShipCurrentState(V1,V2) ((z_BasicTypes_0X_tShipCurrentState *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_13_tStringShipCurrentState))
#ifndef ANY_z_BasicTypes_13_tStringShipCurrentState
#define ANY_z_BasicTypes_13_tStringShipCurrentState(R) (z_BasicTypes_13_tStringShipCurrentState *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_13_tStringShipCurrentState)
#endif
#define z_BasicTypes_13E_copy(P)  P

/*****
* NEWTYPE tStringEnemyShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),449(20,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_14_tStringEnemyShip;
#define ySrtN_z_BasicTypes_14_tStringEnemyShip  (&ySrtR_z_BasicTypes_14_tStringEnemyShip)
#endif

#define yEmptystring_z_BasicTypes_14_tStringEnemyShip(Result) GenString_Emptystring(&ySDL_z_BasicTypes_14_tStringEnemyShip,Result)
#define yMkString_z_BasicTypes_14_tStringEnemyShip(P1,Result) (z_BasicTypes_14_tStringEnemyShip *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_14_tStringEnemyShip,(xString_Type *)Result)
#define yLength_z_BasicTypes_14_tStringEnemyShip(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_14_tStringEnemyShip)
#define yFirst_z_BasicTypes_14_tStringEnemyShip(P1,Result) (z_BasicTypes_0Y_tEnemyShip*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_14_tStringEnemyShip,Result)
#define yLast_z_BasicTypes_14_tStringEnemyShip(P1,Result) (z_BasicTypes_0Y_tEnemyShip*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_14_tStringEnemyShip,Result)
#define yConcat_z_BasicTypes_14_tStringEnemyShip(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_14_tStringEnemyShip,(xString_Type *)Result)
#define ySubString_z_BasicTypes_14_tStringEnemyShip(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_14_tStringEnemyShip,(xString_Type *)Result)
#define yAppend_z_BasicTypes_14_tStringEnemyShip(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_14_tStringEnemyShip)
#define z_BasicTypes_140_empty yEmptystring_z_BasicTypes_14_tStringEnemyShip

#define yAss_z_BasicTypes_14_tStringEnemyShip(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tStringEnemyShip)
#define yAssF_z_BasicTypes_14_tStringEnemyShip(V,E,A)  yAss_z_BasicTypes_14_tStringEnemyShip(&(V),E,A)
#define yEq_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tStringEnemyShip)
#define yEqF_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2)  yEq_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2)
#define yNEqF_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2)  ( ! yEq_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2) )
#define yFree_z_BasicTypes_14_tStringEnemyShip(P) GenericFreeSort((void **)P, (tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tStringEnemyShip)
#define yExtr_z_BasicTypes_14_tStringEnemyShip(V1,V2) ((z_BasicTypes_0Y_tEnemyShip *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_14_tStringEnemyShip))
#define yAddr_z_BasicTypes_14_tStringEnemyShip(V1,V2) ((z_BasicTypes_0Y_tEnemyShip *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_14_tStringEnemyShip))
#ifndef ANY_z_BasicTypes_14_tStringEnemyShip
#define ANY_z_BasicTypes_14_tStringEnemyShip(R) (z_BasicTypes_14_tStringEnemyShip *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tStringEnemyShip)
#endif
#define z_BasicTypes_14E_copy(P)  P

/*****
* NEWTYPE tStringShotsList  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),362(20,130),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_15_tStringShotsList;
#define ySrtN_z_BasicTypes_15_tStringShotsList  (&ySrtR_z_BasicTypes_15_tStringShotsList)
#endif

#define yEmptystring_z_BasicTypes_15_tStringShotsList(Result) GenString_Emptystring(&ySDL_z_BasicTypes_15_tStringShotsList,Result)
#define yMkString_z_BasicTypes_15_tStringShotsList(P1,Result) (z_BasicTypes_15_tStringShotsList *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_15_tStringShotsList,(xString_Type *)Result)
#define yLength_z_BasicTypes_15_tStringShotsList(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringShotsList)
#define yFirst_z_BasicTypes_15_tStringShotsList(P1,Result) (z_BasicTypes_0U_tCoordinates*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringShotsList,Result)
#define yLast_z_BasicTypes_15_tStringShotsList(P1,Result) (z_BasicTypes_0U_tCoordinates*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringShotsList,Result)
#define yConcat_z_BasicTypes_15_tStringShotsList(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_15_tStringShotsList,(xString_Type *)Result)
#define ySubString_z_BasicTypes_15_tStringShotsList(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_15_tStringShotsList,(xString_Type *)Result)
#define yAppend_z_BasicTypes_15_tStringShotsList(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_15_tStringShotsList)
#define z_BasicTypes_150_empty yEmptystring_z_BasicTypes_15_tStringShotsList

#define yAss_z_BasicTypes_15_tStringShotsList(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringShotsList)
#define yAssF_z_BasicTypes_15_tStringShotsList(V,E,A)  yAss_z_BasicTypes_15_tStringShotsList(&(V),E,A)
#define yEq_z_BasicTypes_15_tStringShotsList(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringShotsList)
#define yEqF_z_BasicTypes_15_tStringShotsList(Expr1,Expr2)  yEq_z_BasicTypes_15_tStringShotsList(Expr1,Expr2)
#define yNEqF_z_BasicTypes_15_tStringShotsList(Expr1,Expr2)  ( ! yEq_z_BasicTypes_15_tStringShotsList(Expr1,Expr2) )
#define yFree_z_BasicTypes_15_tStringShotsList(P) GenericFreeSort((void **)P, (tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringShotsList)
#define yExtr_z_BasicTypes_15_tStringShotsList(V1,V2) ((z_BasicTypes_0U_tCoordinates *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_15_tStringShotsList))
#define yAddr_z_BasicTypes_15_tStringShotsList(V1,V2) ((z_BasicTypes_0U_tCoordinates *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_15_tStringShotsList))
#ifndef ANY_z_BasicTypes_15_tStringShotsList
#define ANY_z_BasicTypes_15_tStringShotsList(R) (z_BasicTypes_15_tStringShotsList *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringShotsList)
#endif
#define z_BasicTypes_15E_copy(P)  P

/*****
* SIGNAL InitDataComplete
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),2,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_02_InitDataComplete;
#define ySigN_z_BasicTypes_02_InitDataComplete  (&ySigR_z_BasicTypes_02_InitDataComplete)
#endif

/*****
* SIGNAL StartSimulation
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),3,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_03_StartSimulation;
#define ySigN_z_BasicTypes_03_StartSimulation  (&ySigR_z_BasicTypes_03_StartSimulation)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Integer  Param1;
} yPDef_z_BasicTypes_03_StartSimulation;
typedef yPDef_z_BasicTypes_03_StartSimulation  *yPDP_z_BasicTypes_03_StartSimulation;

/*****
* SIGNAL FinishSimulation
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),4,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_04_FinishSimulation;
#define ySigN_z_BasicTypes_04_FinishSimulation  (&ySigR_z_BasicTypes_04_FinishSimulation)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Integer  Param1;
    z_BasicTypes_1J_tStrategyId  Param2;
} yPDef_z_BasicTypes_04_FinishSimulation;
typedef yPDef_z_BasicTypes_04_FinishSimulation  *yPDP_z_BasicTypes_04_FinishSimulation;

/*****
* SIGNAL OrderSpeedRequest
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),5,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_05_OrderSpeedRequest;
#define ySigN_z_BasicTypes_05_OrderSpeedRequest  (&ySigR_z_BasicTypes_05_OrderSpeedRequest)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1I_tShipId  Param1;
    z_BasicTypes_1J_tStrategyId  Param2;
    z_BasicTypes_1H_tFactorAcceleration  Param3;
} yPDef_z_BasicTypes_05_OrderSpeedRequest;
typedef yPDef_z_BasicTypes_05_OrderSpeedRequest  *yPDP_z_BasicTypes_05_OrderSpeedRequest;

/*****
* SIGNAL OrderTurnRequest
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),6,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_06_OrderTurnRequest;
#define ySigN_z_BasicTypes_06_OrderTurnRequest  (&ySigR_z_BasicTypes_06_OrderTurnRequest)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1I_tShipId  Param1;
    z_BasicTypes_1J_tStrategyId  Param2;
    z_BasicTypes_0T_tHeadingChange  Param3;
} yPDef_z_BasicTypes_06_OrderTurnRequest;
typedef yPDef_z_BasicTypes_06_OrderTurnRequest  *yPDP_z_BasicTypes_06_OrderTurnRequest;

/*****
* SIGNAL OrderFireRequest
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),7,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_07_OrderFireRequest;
#define ySigN_z_BasicTypes_07_OrderFireRequest  (&ySigR_z_BasicTypes_07_OrderFireRequest)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1I_tShipId  Param1;
    z_BasicTypes_1J_tStrategyId  Param2;
    z_BasicTypes_0R_tNameWeaponry  Param3;
    z_BasicTypes_15_tStringShotsList  Param4;
} yPDef_z_BasicTypes_07_OrderFireRequest;
typedef yPDef_z_BasicTypes_07_OrderFireRequest  *yPDP_z_BasicTypes_07_OrderFireRequest;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_07_OrderFireRequest (void *SVarP);
#endif

/*****
* SIGNAL DestroyShip
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),8,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_08_DestroyShip;
#define ySigN_z_BasicTypes_08_DestroyShip  (&ySigR_z_BasicTypes_08_DestroyShip)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1I_tShipId  Param1;
    z_BasicTypes_1J_tStrategyId  Param2;
    z_BasicTypes_0S_tNameShip  Param3;
} yPDef_z_BasicTypes_08_DestroyShip;
typedef yPDef_z_BasicTypes_08_DestroyShip  *yPDP_z_BasicTypes_08_DestroyShip;

/*****
* SIGNAL StrategyVictory
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),9,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_09_StrategyVictory;
#define ySigN_z_BasicTypes_09_StrategyVictory  (&ySigR_z_BasicTypes_09_StrategyVictory)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tStrategyId  Param1;
} yPDef_z_BasicTypes_09_StrategyVictory;
typedef yPDef_z_BasicTypes_09_StrategyVictory  *yPDP_z_BasicTypes_09_StrategyVictory;

/*****
* SIGNAL StrategyLose
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),10,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0A_StrategyLose;
#define ySigN_z_BasicTypes_0A_StrategyLose  (&ySigR_z_BasicTypes_0A_StrategyLose)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tStrategyId  Param1;
} yPDef_z_BasicTypes_0A_StrategyLose;
typedef yPDef_z_BasicTypes_0A_StrategyLose  *yPDP_z_BasicTypes_0A_StrategyLose;

/*****
* SIGNAL OrderSpeedResponse
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),11,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0B_OrderSpeedResponse;
#define ySigN_z_BasicTypes_0B_OrderSpeedResponse  (&ySigR_z_BasicTypes_0B_OrderSpeedResponse)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1I_tShipId  Param1;
    z_BasicTypes_1J_tStrategyId  Param2;
} yPDef_z_BasicTypes_0B_OrderSpeedResponse;
typedef yPDef_z_BasicTypes_0B_OrderSpeedResponse  *yPDP_z_BasicTypes_0B_OrderSpeedResponse;

/*****
* SIGNAL OrderSpeedReject
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),12,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0C_OrderSpeedReject;
#define ySigN_z_BasicTypes_0C_OrderSpeedReject  (&ySigR_z_BasicTypes_0C_OrderSpeedReject)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1I_tShipId  Param1;
    z_BasicTypes_1J_tStrategyId  Param2;
} yPDef_z_BasicTypes_0C_OrderSpeedReject;
typedef yPDef_z_BasicTypes_0C_OrderSpeedReject  *yPDP_z_BasicTypes_0C_OrderSpeedReject;

/*****
* SIGNAL OrderTurnResponse
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),13,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0D_OrderTurnResponse;
#define ySigN_z_BasicTypes_0D_OrderTurnResponse  (&ySigR_z_BasicTypes_0D_OrderTurnResponse)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1I_tShipId  Param1;
    z_BasicTypes_1J_tStrategyId  Param2;
} yPDef_z_BasicTypes_0D_OrderTurnResponse;
typedef yPDef_z_BasicTypes_0D_OrderTurnResponse  *yPDP_z_BasicTypes_0D_OrderTurnResponse;

/*****
* SIGNAL OrderTurnReject
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),14,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0E_OrderTurnReject;
#define ySigN_z_BasicTypes_0E_OrderTurnReject  (&ySigR_z_BasicTypes_0E_OrderTurnReject)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1I_tShipId  Param1;
    z_BasicTypes_1J_tStrategyId  Param2;
} yPDef_z_BasicTypes_0E_OrderTurnReject;
typedef yPDef_z_BasicTypes_0E_OrderTurnReject  *yPDP_z_BasicTypes_0E_OrderTurnReject;

/*****
* SIGNAL OrderFireResponse
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),15,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0F_OrderFireResponse;
#define ySigN_z_BasicTypes_0F_OrderFireResponse  (&ySigR_z_BasicTypes_0F_OrderFireResponse)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1I_tShipId  Param1;
    z_BasicTypes_1J_tStrategyId  Param2;
} yPDef_z_BasicTypes_0F_OrderFireResponse;
typedef yPDef_z_BasicTypes_0F_OrderFireResponse  *yPDP_z_BasicTypes_0F_OrderFireResponse;

/*****
* SIGNAL OrderFireReject
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),16,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0G_OrderFireReject;
#define ySigN_z_BasicTypes_0G_OrderFireReject  (&ySigR_z_BasicTypes_0G_OrderFireReject)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1I_tShipId  Param1;
    z_BasicTypes_1J_tStrategyId  Param2;
} yPDef_z_BasicTypes_0G_OrderFireReject;
typedef yPDef_z_BasicTypes_0G_OrderFireReject  *yPDP_z_BasicTypes_0G_OrderFireReject;

/*****
* SIGNAL ShipsCurrentState
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),17,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0H_ShipsCurrentState;
#define ySigN_z_BasicTypes_0H_ShipsCurrentState  (&ySigR_z_BasicTypes_0H_ShipsCurrentState)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tStrategyId  Param1;
    z_BasicTypes_13_tStringShipCurrentState  Param2;
} yPDef_z_BasicTypes_0H_ShipsCurrentState;
typedef yPDef_z_BasicTypes_0H_ShipsCurrentState  *yPDP_z_BasicTypes_0H_ShipsCurrentState;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0H_ShipsCurrentState (void *SVarP);
#endif

/*****
* SIGNAL VisibleShip
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),18,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0I_VisibleShip;
#define ySigN_z_BasicTypes_0I_VisibleShip  (&ySigR_z_BasicTypes_0I_VisibleShip)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1J_tStrategyId  Param1;
    z_BasicTypes_14_tStringEnemyShip  Param2;
} yPDef_z_BasicTypes_0I_VisibleShip;
typedef yPDef_z_BasicTypes_0I_VisibleShip  *yPDP_z_BasicTypes_0I_VisibleShip;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0I_VisibleShip (void *SVarP);
#endif

/*****
* SIGNAL messageLog
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),19,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0J_messageLog;
#define ySigN_z_BasicTypes_0J_messageLog  (&ySigR_z_BasicTypes_0J_messageLog)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Charstring  Param1;
} yPDef_z_BasicTypes_0J_messageLog;
typedef yPDef_z_BasicTypes_0J_messageLog  *yPDP_z_BasicTypes_0J_messageLog;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0J_messageLog (void *SVarP);
#endif

/*****
* SIGNAL messageError
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(6),233(20,40),20,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0K_messageError;
#define ySigN_z_BasicTypes_0K_messageError  (&ySigR_z_BasicTypes_0K_messageError)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Charstring  Param1;
} yPDef_z_BasicTypes_0K_messageError;
typedef yPDef_z_BasicTypes_0K_messageError  *yPDP_z_BasicTypes_0K_messageError;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0K_messageError (void *SVarP);
#endif

/*****
* REMOTE VARIABLE gWeaponryCharacter
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(5),329(20,40),1,8)
******/
#ifndef XNOREMOTEVARIDNODE
extern struct xRemoteVarIdStruct yReVR_z_BasicTypes_22_gWeaponryCharacter;
#define yReVN_z_BasicTypes_22_gWeaponryCharacter  (&yReVR_z_BasicTypes_22_gWeaponryCharacter)
#endif

/*****
* REMOTE VARIABLE gShipsCharacter
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(5),329(20,40),2,8)
******/
#ifndef XNOREMOTEVARIDNODE
extern struct xRemoteVarIdStruct yReVR_z_BasicTypes_23_gShipsCharacter;
#define yReVN_z_BasicTypes_23_gShipsCharacter  (&yReVR_z_BasicTypes_23_gShipsCharacter)
#endif

/*************************************************************************
**                #CODE directives, #HEADING sections                   **
*************************************************************************/
#endif
