
/* Program generated by Cadvanced 4.3.0  */
#define XSCT_CADVANCED

#ifndef X_IFC_z_BasicTypes__BasicTypes
#define X_IFC_z_BasicTypes__BasicTypes

/* *************** DECLARATIONS IN PACKAGE BasicTypes *************** */


/*--------------------------- SYNONYMS ----------------------------*/
#define z_BasicTypes_1K_MaxXCoordinate SDL_INTEGER_LIT(200)

#define MaxXCoordinate SDL_INTEGER_LIT(200)

#define z_BasicTypes_1L_MaxYCoordinate SDL_INTEGER_LIT(100)

#define MaxYCoordinate SDL_INTEGER_LIT(100)

#define z_BasicTypes_1M_MaxWCPower SDL_INTEGER_LIT(30)

#define MaxWCPower SDL_INTEGER_LIT(30)

#define z_BasicTypes_1N_MaxWCRange SDL_INTEGER_LIT(50)

#define MaxWCRange SDL_INTEGER_LIT(50)

#define z_BasicTypes_1O_MaxWCSpeed SDL_INTEGER_LIT(30)

#define MaxWCSpeed SDL_INTEGER_LIT(30)

#define z_BasicTypes_1P_MaxSCRange SDL_INTEGER_LIT(50)

#define MaxSCRange SDL_INTEGER_LIT(50)

#define z_BasicTypes_1Q_MaxSCMaxSpeed SDL_INTEGER_LIT(10)

#define MaxSCMaxSpeed SDL_INTEGER_LIT(10)

#define z_BasicTypes_1R_MaxSCMaxAcceleration SDL_INTEGER_LIT(5)

#define MaxSCMaxAcceleration SDL_INTEGER_LIT(5)

#define z_BasicTypes_1S_MaxSCMaxResource SDL_INTEGER_LIT(100)

#define MaxSCMaxResource SDL_INTEGER_LIT(100)

#define z_BasicTypes_1T_MaxAAWeaponry SDL_INTEGER_LIT(30)

#define MaxAAWeaponry SDL_INTEGER_LIT(30)

#define z_BasicTypes_1U_MaxLUWeaponry SDL_INTEGER_LIT(5)

#define MaxLUWeaponry SDL_INTEGER_LIT(5)

#define z_BasicTypes_1V_MaxTypeBattleship SDL_INTEGER_LIT(2)

#define MaxTypeBattleship SDL_INTEGER_LIT(2)

#define z_BasicTypes_1W_MaxTypeCruiser SDL_INTEGER_LIT(2)

#define MaxTypeCruiser SDL_INTEGER_LIT(2)

#define z_BasicTypes_1X_MaxTypeDestroyer SDL_INTEGER_LIT(2)

#define MaxTypeDestroyer SDL_INTEGER_LIT(2)

#define z_BasicTypes_1Y_MaxTypeMissileCutter SDL_INTEGER_LIT(2)

#define MaxTypeMissileCutter SDL_INTEGER_LIT(2)

#define z_BasicTypes_1Z_MaxTypeRepairBoat SDL_INTEGER_LIT(1)

#define MaxTypeRepairBoat SDL_INTEGER_LIT(1)

#define z_BasicTypes_20_AmountStrategy SDL_INTEGER_LIT(2)

#define AmountStrategy SDL_INTEGER_LIT(2)

#define z_BasicTypes_21_sqrt2 SDL_REAL_LIT(1.41421356, 1, 414213560)

#define sqrt2 SDL_REAL_LIT(1.41421356, 1, 414213560)


/*---------------------------- SORTS ------------------------------*/

/*****
* SYNTYPE tSCRange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_16_tSCRange;
#define ySDL_tSCRange ySDL_z_BasicTypes_16_tSCRange
typedef SDL_Integer  z_BasicTypes_16_tSCRange;
#define tSCRange z_BasicTypes_16_tSCRange

/*****
* SYNTYPE tSCMaxSpeed  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_17_tSCMaxSpeed;
#define ySDL_tSCMaxSpeed ySDL_z_BasicTypes_17_tSCMaxSpeed
typedef SDL_Integer  z_BasicTypes_17_tSCMaxSpeed;
#define tSCMaxSpeed z_BasicTypes_17_tSCMaxSpeed

/*****
* SYNTYPE tSCMaxAcceleration  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),7,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_18_tSCMaxAcceleration;
#define ySDL_tSCMaxAcceleration ySDL_z_BasicTypes_18_tSCMaxAcceleration
typedef SDL_Integer  z_BasicTypes_18_tSCMaxAcceleration;
#define tSCMaxAcceleration z_BasicTypes_18_tSCMaxAcceleration

/*****
* SYNTYPE tSCMaxResource  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),10,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_19_tSCMaxResource;
#define ySDL_tSCMaxResource ySDL_z_BasicTypes_19_tSCMaxResource
typedef SDL_Integer  z_BasicTypes_19_tSCMaxResource;
#define tSCMaxResource z_BasicTypes_19_tSCMaxResource

/*****
* SYNTYPE tWCPower  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1A_tWCPower;
#define ySDL_tWCPower ySDL_z_BasicTypes_1A_tWCPower
typedef SDL_Integer  z_BasicTypes_1A_tWCPower;
#define tWCPower z_BasicTypes_1A_tWCPower

/*****
* SYNTYPE tWCRange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1B_tWCRange;
#define ySDL_tWCRange ySDL_z_BasicTypes_1B_tWCRange
typedef SDL_Integer  z_BasicTypes_1B_tWCRange;
#define tWCRange z_BasicTypes_1B_tWCRange

/*****
* SYNTYPE tWCSpeed  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),7,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1C_tWCSpeed;
#define ySDL_tWCSpeed ySDL_z_BasicTypes_1C_tWCSpeed
typedef SDL_Integer  z_BasicTypes_1C_tWCSpeed;
#define tWCSpeed z_BasicTypes_1C_tWCSpeed

/*****
* SYNTYPE tAAWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),281(80,75),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1D_tAAWeaponry;
#define ySDL_tAAWeaponry ySDL_z_BasicTypes_1D_tAAWeaponry
typedef SDL_Integer  z_BasicTypes_1D_tAAWeaponry;
#define tAAWeaponry z_BasicTypes_1D_tAAWeaponry

/*****
* SYNTYPE tLUWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),281(80,75),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1E_tLUWeaponry;
#define ySDL_tLUWeaponry ySDL_z_BasicTypes_1E_tLUWeaponry
typedef SDL_Integer  z_BasicTypes_1E_tLUWeaponry;
#define tLUWeaponry z_BasicTypes_1E_tLUWeaponry

/*****
* SYNTYPE tXCoordinate  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),290(20,85),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1F_tXCoordinate;
#define ySDL_tXCoordinate ySDL_z_BasicTypes_1F_tXCoordinate
typedef SDL_Integer  z_BasicTypes_1F_tXCoordinate;
#define tXCoordinate z_BasicTypes_1F_tXCoordinate

/*****
* SYNTYPE tYCoordinate  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),290(20,85),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1G_tYCoordinate;
#define ySDL_tYCoordinate ySDL_z_BasicTypes_1G_tYCoordinate
typedef SDL_Integer  z_BasicTypes_1G_tYCoordinate;
#define tYCoordinate z_BasicTypes_1G_tYCoordinate

/*****
* SYNTYPE tFactorAcceleration  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),374(80,100),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1H_tFactorAcceleration;
#define ySDL_tFactorAcceleration ySDL_z_BasicTypes_1H_tFactorAcceleration
typedef SDL_Real  z_BasicTypes_1H_tFactorAcceleration;
#define tFactorAcceleration z_BasicTypes_1H_tFactorAcceleration

/*****
* SYNTYPE tShipId  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),407(20,110),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1I_tShipId;
#define ySDL_tShipId ySDL_z_BasicTypes_1I_tShipId
typedef SDL_Integer  z_BasicTypes_1I_tShipId;
#define tShipId z_BasicTypes_1I_tShipId

/*****
* SYNTYPE tStrategyId  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),413(80,115),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1J_tStrategyId;
#define ySDL_tStrategyId ySDL_z_BasicTypes_1J_tStrategyId
typedef SDL_Integer  z_BasicTypes_1J_tStrategyId;
#define tStrategyId z_BasicTypes_1J_tStrategyId

/*****
* NEWTYPE tHeading  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0P_tHeading;
#define ySDL_tHeading ySDL_z_BasicTypes_0P_tHeading
typedef XENUM_TYPE z_BasicTypes_0P_tHeading;
#define z_BasicTypes_0P0_NORTH 0
#define z_BasicTypes_0P1_NORTH_EAST 1
#define z_BasicTypes_0P2_EAST 2
#define z_BasicTypes_0P3_SOUTH_EAST 3
#define z_BasicTypes_0P4_SOUTH 4
#define z_BasicTypes_0P5_SOUTH_WEST 5
#define z_BasicTypes_0P6_WEST 6
#define z_BasicTypes_0P7_NORTH_WEST 7
#ifndef XNO_ENUM_VALUES_IN_IFC
#define NORTH 0
#define NORTH_EAST 1
#define EAST 2
#define SOUTH_EAST 3
#define SOUTH 4
#define SOUTH_WEST 5
#define WEST 6
#define NORTH_WEST 7
#endif
#define tHeading z_BasicTypes_0P_tHeading

/*****
* NEWTYPE tDeep  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0Q_tDeep;
#define ySDL_tDeep ySDL_z_BasicTypes_0Q_tDeep
typedef XENUM_TYPE z_BasicTypes_0Q_tDeep;
#define z_BasicTypes_0Q0_LAND 0
#define z_BasicTypes_0Q1_FLEET 1
#define z_BasicTypes_0Q2_NORMAL 2
#define z_BasicTypes_0Q3_DEEPLY 3
#define z_BasicTypes_0Q4_VERY_DEEPLY 4
#ifndef XNO_ENUM_VALUES_IN_IFC
#define LAND 0
#define FLEET 1
#define NORMAL 2
#define DEEPLY 3
#define VERY_DEEPLY 4
#endif
#define tDeep z_BasicTypes_0Q_tDeep

/*****
* NEWTYPE tNameWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0R_tNameWeaponry;
#define ySDL_tNameWeaponry ySDL_z_BasicTypes_0R_tNameWeaponry
typedef XENUM_TYPE z_BasicTypes_0R_tNameWeaponry;
#define z_BasicTypes_0R0_MISSILE 0
#define z_BasicTypes_0R1_TORPEDO 1
#define z_BasicTypes_0R2_SHELL 2
#define z_BasicTypes_0R3_REPAIR 3
#ifndef XNO_ENUM_VALUES_IN_IFC
#define MISSILE 0
#define TORPEDO 1
#define SHELL 2
#define REPAIR 3
#endif
#define tNameWeaponry z_BasicTypes_0R_tNameWeaponry

/*****
* NEWTYPE tNameShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0S_tNameShip;
#define ySDL_tNameShip ySDL_z_BasicTypes_0S_tNameShip
typedef XENUM_TYPE z_BasicTypes_0S_tNameShip;
#define z_BasicTypes_0S0_BATTLESHIP 0
#define z_BasicTypes_0S1_CRUISER 1
#define z_BasicTypes_0S2_DESTROYER 2
#define z_BasicTypes_0S3_MISSILE_CUTTER 3
#define z_BasicTypes_0S4_REPAIR_BOAT 4
#ifndef XNO_ENUM_VALUES_IN_IFC
#define BATTLESHIP 0
#define CRUISER 1
#define DESTROYER 2
#define MISSILE_CUTTER 3
#define REPAIR_BOAT 4
#endif
#define tNameShip z_BasicTypes_0S_tNameShip

/*****
* NEWTYPE tHeadingChange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),359(20,175),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0T_tHeadingChange;
#define ySDL_tHeadingChange ySDL_z_BasicTypes_0T_tHeadingChange
typedef XENUM_TYPE z_BasicTypes_0T_tHeadingChange;
#define z_BasicTypes_0T0_LEFT 0
#define z_BasicTypes_0T1_RIGHT 1
#ifndef XNO_ENUM_VALUES_IN_IFC
#define LEFT 0
#define RIGHT 1
#endif
#define tHeadingChange z_BasicTypes_0T_tHeadingChange

/*****
* NEWTYPE tCoordinates  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),287(20,40),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0U_tCoordinates;
#define ySDL_tCoordinates ySDL_z_BasicTypes_0U_tCoordinates
typedef struct z_BasicTypes_0U_tCoordinates_s {
    z_BasicTypes_1F_tXCoordinate  x;
    z_BasicTypes_1G_tYCoordinate  y;
} z_BasicTypes_0U_tCoordinates;
#define tCoordinates z_BasicTypes_0U_tCoordinates

/*****
* NEWTYPE tWeaponryCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),146(20,60),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0V_tWeaponryCharacter;
#define ySDL_tWeaponryCharacter ySDL_z_BasicTypes_0V_tWeaponryCharacter
typedef struct z_BasicTypes_0V_tWeaponryCharacter_s {
    z_BasicTypes_1A_tWCPower  Power;
    z_BasicTypes_1B_tWCRange  Range;
    z_BasicTypes_1C_tWCSpeed  Speed;
} z_BasicTypes_0V_tWeaponryCharacter;
#define tWeaponryCharacter z_BasicTypes_0V_tWeaponryCharacter

/*****
* NEWTYPE tEnemyShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),446(20,165),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0Y_tEnemyShip;
#define ySDL_tEnemyShip ySDL_z_BasicTypes_0Y_tEnemyShip
typedef struct z_BasicTypes_0Y_tEnemyShip_s {
    z_BasicTypes_1I_tShipId  ShipId;
    z_BasicTypes_1J_tStrategyId  StrategyId;
    z_BasicTypes_0S_tNameShip  TypeShip;
    z_BasicTypes_17_tSCMaxSpeed  Speed;
    z_BasicTypes_0P_tHeading  Heading;
    z_BasicTypes_0U_tCoordinates  Coordinates;
} z_BasicTypes_0Y_tEnemyShip;
#define tEnemyShip z_BasicTypes_0Y_tEnemyShip

/*****
* NEWTYPE tArrayWeaponryCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),215(20,40),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_0Z_tArrayWeaponryCharacter;
#define ySDL_tArrayWeaponryCharacter ySDL_z_BasicTypes_0Z_tArrayWeaponryCharacter
typedef struct {
    z_BasicTypes_0V_tWeaponryCharacter  A[4];
}  z_BasicTypes_0Z_tArrayWeaponryCharacter;
#define tArrayWeaponryCharacter z_BasicTypes_0Z_tArrayWeaponryCharacter

/*****
* NEWTYPE tArrayAmountAmmunition  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),344(20,70),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_11_tArrayAmountAmmunition;
#define ySDL_tArrayAmountAmmunition ySDL_z_BasicTypes_11_tArrayAmountAmmunition
typedef struct {
    z_BasicTypes_1D_tAAWeaponry  A[4];
}  z_BasicTypes_11_tArrayAmountAmmunition;
#define tArrayAmountAmmunition z_BasicTypes_11_tArrayAmountAmmunition

/*****
* NEWTYPE tArrayAmountLaunchUnit  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),341(20,85),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_12_tArrayAmountLaunchUnit;
#define ySDL_tArrayAmountLaunchUnit ySDL_z_BasicTypes_12_tArrayAmountLaunchUnit
typedef struct {
    z_BasicTypes_1E_tLUWeaponry  A[4];
}  z_BasicTypes_12_tArrayAmountLaunchUnit;
#define tArrayAmountLaunchUnit z_BasicTypes_12_tArrayAmountLaunchUnit

/*****
* NEWTYPE tStringEnemyShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),449(20,115),1,9)
******/
extern tSDLGenListInfo ySDL_z_BasicTypes_14_tStringEnemyShip;
#define ySDL_tStringEnemyShip ySDL_z_BasicTypes_14_tStringEnemyShip

typedef struct z_BasicTypes_14_tStringEnemyShip_ystruct *z_BasicTypes_14_tStringEnemyShip_yptr;
typedef struct z_BasicTypes_14_tStringEnemyShip_ystruct {
  z_BasicTypes_14_tStringEnemyShip_yptr Suc;
  z_BasicTypes_0Y_tEnemyShip Data;
} z_BasicTypes_14_tStringEnemyShip_yrec;
typedef struct {
  z_BasicTypes_14_tStringEnemyShip_yptr First;
  z_BasicTypes_14_tStringEnemyShip_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_14_tStringEnemyShip;
#define tStringEnemyShip_yrec z_BasicTypes_14_tStringEnemyShip_yrec
#define tStringEnemyShip z_BasicTypes_14_tStringEnemyShip

/*****
* NEWTYPE tStringShotsList  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),362(20,130),1,9)
******/
extern tSDLGenListInfo ySDL_z_BasicTypes_15_tStringShotsList;
#define ySDL_tStringShotsList ySDL_z_BasicTypes_15_tStringShotsList

typedef struct z_BasicTypes_15_tStringShotsList_ystruct *z_BasicTypes_15_tStringShotsList_yptr;
typedef struct z_BasicTypes_15_tStringShotsList_ystruct {
  z_BasicTypes_15_tStringShotsList_yptr Suc;
  z_BasicTypes_0U_tCoordinates Data;
} z_BasicTypes_15_tStringShotsList_yrec;
typedef struct {
  z_BasicTypes_15_tStringShotsList_yptr First;
  z_BasicTypes_15_tStringShotsList_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_15_tStringShotsList;
#define tStringShotsList_yrec z_BasicTypes_15_tStringShotsList_yrec
#define tStringShotsList z_BasicTypes_15_tStringShotsList

/*****
* NEWTYPE tShipCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),251(20,85),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0W_tShipCharacter;
#define ySDL_tShipCharacter ySDL_z_BasicTypes_0W_tShipCharacter
typedef struct z_BasicTypes_0W_tShipCharacter_s {
    z_BasicTypes_16_tSCRange  Range;
    z_BasicTypes_17_tSCMaxSpeed  MaxSpeed;
    z_BasicTypes_18_tSCMaxAcceleration  MaxAcceleration;
    z_BasicTypes_19_tSCMaxResource  MaxResource;
    z_BasicTypes_11_tArrayAmountAmmunition  MaxAmmunition;
    z_BasicTypes_12_tArrayAmountLaunchUnit  MaxLaunchUnit;
    z_BasicTypes_0Q_tDeep  MaxDeep;
} z_BasicTypes_0W_tShipCharacter;
#define tShipCharacter z_BasicTypes_0W_tShipCharacter

/*****
* NEWTYPE tShipCurrentState  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),401(20,125),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0X_tShipCurrentState;
#define ySDL_tShipCurrentState ySDL_z_BasicTypes_0X_tShipCurrentState
typedef struct z_BasicTypes_0X_tShipCurrentState_s {
    z_BasicTypes_1I_tShipId  ShipId;
    z_BasicTypes_1J_tStrategyId  StrategyId;
    z_BasicTypes_0S_tNameShip  TypeShip;
    z_BasicTypes_17_tSCMaxSpeed  Speed;
    z_BasicTypes_0P_tHeading  Heading;
    z_BasicTypes_19_tSCMaxResource  Resource;
    z_BasicTypes_0U_tCoordinates  Coordinates;
    z_BasicTypes_11_tArrayAmountAmmunition  Ammunition;
} z_BasicTypes_0X_tShipCurrentState;
#define tShipCurrentState z_BasicTypes_0X_tShipCurrentState

/*****
* NEWTYPE tArrayShipsCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),284(20,55),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_10_tArrayShipsCharacter;
#define ySDL_tArrayShipsCharacter ySDL_z_BasicTypes_10_tArrayShipsCharacter
typedef struct {
    z_BasicTypes_0W_tShipCharacter  A[5];
}  z_BasicTypes_10_tArrayShipsCharacter;
#define tArrayShipsCharacter z_BasicTypes_10_tArrayShipsCharacter

/*****
* NEWTYPE tStringShipCurrentState  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),404(20,100),1,9)
******/
extern tSDLGenListInfo ySDL_z_BasicTypes_13_tStringShipCurrentState;
#define ySDL_tStringShipCurrentState ySDL_z_BasicTypes_13_tStringShipCurrentState

typedef struct z_BasicTypes_13_tStringShipCurrentState_ystruct *z_BasicTypes_13_tStringShipCurrentState_yptr;
typedef struct z_BasicTypes_13_tStringShipCurrentState_ystruct {
  z_BasicTypes_13_tStringShipCurrentState_yptr Suc;
  z_BasicTypes_0X_tShipCurrentState Data;
} z_BasicTypes_13_tStringShipCurrentState_yrec;
typedef struct {
  z_BasicTypes_13_tStringShipCurrentState_yptr First;
  z_BasicTypes_13_tStringShipCurrentState_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_13_tStringShipCurrentState;
#define tStringShipCurrentState_yrec z_BasicTypes_13_tStringShipCurrentState_yrec
#define tStringShipCurrentState z_BasicTypes_13_tStringShipCurrentState

/*****
* SYNTYPE tSCRange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_16_tSCRange;
#define ySrtN_tSCRange  (&ySrtR_z_BasicTypes_16_tSCRange)
#endif

#define yAssF_z_BasicTypes_16_tSCRange(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tSCRange(V,E,A) yAssF_z_BasicTypes_16_tSCRange(V,E,A)
#define yEqF_z_BasicTypes_16_tSCRange(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_16_tSCRange(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tSCRange(Expr1,Expr2) yEqF_z_BasicTypes_16_tSCRange(Expr1,Expr2)
#define yNEqF_tSCRange(Expr1,Expr2) yNEqF_z_BasicTypes_16_tSCRange(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_16_tSCRange yMkAddr_SDL_Integer

/*****
* SYNTYPE tSCMaxSpeed  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_17_tSCMaxSpeed;
#define ySrtN_tSCMaxSpeed  (&ySrtR_z_BasicTypes_17_tSCMaxSpeed)
#endif

#define yAssF_z_BasicTypes_17_tSCMaxSpeed(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tSCMaxSpeed(V,E,A) yAssF_z_BasicTypes_17_tSCMaxSpeed(V,E,A)
#define yEqF_z_BasicTypes_17_tSCMaxSpeed(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_17_tSCMaxSpeed(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tSCMaxSpeed(Expr1,Expr2) yEqF_z_BasicTypes_17_tSCMaxSpeed(Expr1,Expr2)
#define yNEqF_tSCMaxSpeed(Expr1,Expr2) yNEqF_z_BasicTypes_17_tSCMaxSpeed(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_17_tSCMaxSpeed yMkAddr_SDL_Integer

/*****
* SYNTYPE tSCMaxAcceleration  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),7,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_18_tSCMaxAcceleration;
#define ySrtN_tSCMaxAcceleration  (&ySrtR_z_BasicTypes_18_tSCMaxAcceleration)
#endif

#define yAssF_z_BasicTypes_18_tSCMaxAcceleration(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tSCMaxAcceleration(V,E,A) yAssF_z_BasicTypes_18_tSCMaxAcceleration(V,E,A)
#define yEqF_z_BasicTypes_18_tSCMaxAcceleration(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_18_tSCMaxAcceleration(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tSCMaxAcceleration(Expr1,Expr2) yEqF_z_BasicTypes_18_tSCMaxAcceleration(Expr1,Expr2)
#define yNEqF_tSCMaxAcceleration(Expr1,Expr2) yNEqF_z_BasicTypes_18_tSCMaxAcceleration(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_18_tSCMaxAcceleration yMkAddr_SDL_Integer

/*****
* SYNTYPE tSCMaxResource  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),278(20,40),10,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_19_tSCMaxResource;
#define ySrtN_tSCMaxResource  (&ySrtR_z_BasicTypes_19_tSCMaxResource)
#endif

#define yAssF_z_BasicTypes_19_tSCMaxResource(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tSCMaxResource(V,E,A) yAssF_z_BasicTypes_19_tSCMaxResource(V,E,A)
#define yEqF_z_BasicTypes_19_tSCMaxResource(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_19_tSCMaxResource(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tSCMaxResource(Expr1,Expr2) yEqF_z_BasicTypes_19_tSCMaxResource(Expr1,Expr2)
#define yNEqF_tSCMaxResource(Expr1,Expr2) yNEqF_z_BasicTypes_19_tSCMaxResource(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_19_tSCMaxResource yMkAddr_SDL_Integer

/*****
* SYNTYPE tWCPower  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1A_tWCPower;
#define ySrtN_tWCPower  (&ySrtR_z_BasicTypes_1A_tWCPower)
#endif

#define yAssF_z_BasicTypes_1A_tWCPower(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tWCPower(V,E,A) yAssF_z_BasicTypes_1A_tWCPower(V,E,A)
#define yEqF_z_BasicTypes_1A_tWCPower(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1A_tWCPower(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tWCPower(Expr1,Expr2) yEqF_z_BasicTypes_1A_tWCPower(Expr1,Expr2)
#define yNEqF_tWCPower(Expr1,Expr2) yNEqF_z_BasicTypes_1A_tWCPower(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1A_tWCPower yMkAddr_SDL_Integer

/*****
* SYNTYPE tWCRange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1B_tWCRange;
#define ySrtN_tWCRange  (&ySrtR_z_BasicTypes_1B_tWCRange)
#endif

#define yAssF_z_BasicTypes_1B_tWCRange(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tWCRange(V,E,A) yAssF_z_BasicTypes_1B_tWCRange(V,E,A)
#define yEqF_z_BasicTypes_1B_tWCRange(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1B_tWCRange(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tWCRange(Expr1,Expr2) yEqF_z_BasicTypes_1B_tWCRange(Expr1,Expr2)
#define yNEqF_tWCRange(Expr1,Expr2) yNEqF_z_BasicTypes_1B_tWCRange(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1B_tWCRange yMkAddr_SDL_Integer

/*****
* SYNTYPE tWCSpeed  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),188(80,40),7,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1C_tWCSpeed;
#define ySrtN_tWCSpeed  (&ySrtR_z_BasicTypes_1C_tWCSpeed)
#endif

#define yAssF_z_BasicTypes_1C_tWCSpeed(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tWCSpeed(V,E,A) yAssF_z_BasicTypes_1C_tWCSpeed(V,E,A)
#define yEqF_z_BasicTypes_1C_tWCSpeed(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1C_tWCSpeed(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tWCSpeed(Expr1,Expr2) yEqF_z_BasicTypes_1C_tWCSpeed(Expr1,Expr2)
#define yNEqF_tWCSpeed(Expr1,Expr2) yNEqF_z_BasicTypes_1C_tWCSpeed(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1C_tWCSpeed yMkAddr_SDL_Integer

/*****
* SYNTYPE tAAWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),281(80,75),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1D_tAAWeaponry;
#define ySrtN_tAAWeaponry  (&ySrtR_z_BasicTypes_1D_tAAWeaponry)
#endif

#define yAssF_z_BasicTypes_1D_tAAWeaponry(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tAAWeaponry(V,E,A) yAssF_z_BasicTypes_1D_tAAWeaponry(V,E,A)
#define yEqF_z_BasicTypes_1D_tAAWeaponry(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1D_tAAWeaponry(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tAAWeaponry(Expr1,Expr2) yEqF_z_BasicTypes_1D_tAAWeaponry(Expr1,Expr2)
#define yNEqF_tAAWeaponry(Expr1,Expr2) yNEqF_z_BasicTypes_1D_tAAWeaponry(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1D_tAAWeaponry yMkAddr_SDL_Integer

/*****
* SYNTYPE tLUWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),281(80,75),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1E_tLUWeaponry;
#define ySrtN_tLUWeaponry  (&ySrtR_z_BasicTypes_1E_tLUWeaponry)
#endif

#define yAssF_z_BasicTypes_1E_tLUWeaponry(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tLUWeaponry(V,E,A) yAssF_z_BasicTypes_1E_tLUWeaponry(V,E,A)
#define yEqF_z_BasicTypes_1E_tLUWeaponry(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1E_tLUWeaponry(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tLUWeaponry(Expr1,Expr2) yEqF_z_BasicTypes_1E_tLUWeaponry(Expr1,Expr2)
#define yNEqF_tLUWeaponry(Expr1,Expr2) yNEqF_z_BasicTypes_1E_tLUWeaponry(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1E_tLUWeaponry yMkAddr_SDL_Integer

/*****
* SYNTYPE tXCoordinate  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),290(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1F_tXCoordinate;
#define ySrtN_tXCoordinate  (&ySrtR_z_BasicTypes_1F_tXCoordinate)
#endif

#define yAssF_z_BasicTypes_1F_tXCoordinate(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tXCoordinate(V,E,A) yAssF_z_BasicTypes_1F_tXCoordinate(V,E,A)
#define yEqF_z_BasicTypes_1F_tXCoordinate(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1F_tXCoordinate(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tXCoordinate(Expr1,Expr2) yEqF_z_BasicTypes_1F_tXCoordinate(Expr1,Expr2)
#define yNEqF_tXCoordinate(Expr1,Expr2) yNEqF_z_BasicTypes_1F_tXCoordinate(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1F_tXCoordinate yMkAddr_SDL_Integer

/*****
* SYNTYPE tYCoordinate  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),290(20,85),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1G_tYCoordinate;
#define ySrtN_tYCoordinate  (&ySrtR_z_BasicTypes_1G_tYCoordinate)
#endif

#define yAssF_z_BasicTypes_1G_tYCoordinate(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tYCoordinate(V,E,A) yAssF_z_BasicTypes_1G_tYCoordinate(V,E,A)
#define yEqF_z_BasicTypes_1G_tYCoordinate(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1G_tYCoordinate(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tYCoordinate(Expr1,Expr2) yEqF_z_BasicTypes_1G_tYCoordinate(Expr1,Expr2)
#define yNEqF_tYCoordinate(Expr1,Expr2) yNEqF_z_BasicTypes_1G_tYCoordinate(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1G_tYCoordinate yMkAddr_SDL_Integer

/*****
* SYNTYPE tFactorAcceleration  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),374(80,100),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1H_tFactorAcceleration;
#define ySrtN_tFactorAcceleration  (&ySrtR_z_BasicTypes_1H_tFactorAcceleration)
#endif

#define yAssF_z_BasicTypes_1H_tFactorAcceleration(V,E,A)  yAssF_SDL_Real(V,E,A)
#define yAssF_tFactorAcceleration(V,E,A) yAssF_z_BasicTypes_1H_tFactorAcceleration(V,E,A)
#define yEqF_z_BasicTypes_1H_tFactorAcceleration(Expr1,Expr2)  yEqF_SDL_Real(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1H_tFactorAcceleration(Expr1,Expr2)  yNEqF_SDL_Real(Expr1,Expr2)
#define yEqF_tFactorAcceleration(Expr1,Expr2) yEqF_z_BasicTypes_1H_tFactorAcceleration(Expr1,Expr2)
#define yNEqF_tFactorAcceleration(Expr1,Expr2) yNEqF_z_BasicTypes_1H_tFactorAcceleration(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1H_tFactorAcceleration yMkAddr_SDL_Real

/*****
* SYNTYPE tShipId  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),407(20,110),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1I_tShipId;
#define ySrtN_tShipId  (&ySrtR_z_BasicTypes_1I_tShipId)
#endif

#define yAssF_z_BasicTypes_1I_tShipId(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tShipId(V,E,A) yAssF_z_BasicTypes_1I_tShipId(V,E,A)
#define yEqF_z_BasicTypes_1I_tShipId(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1I_tShipId(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tShipId(Expr1,Expr2) yEqF_z_BasicTypes_1I_tShipId(Expr1,Expr2)
#define yNEqF_tShipId(Expr1,Expr2) yNEqF_z_BasicTypes_1I_tShipId(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1I_tShipId yMkAddr_SDL_Integer

/*****
* SYNTYPE tStrategyId  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(1),413(80,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1J_tStrategyId;
#define ySrtN_tStrategyId  (&ySrtR_z_BasicTypes_1J_tStrategyId)
#endif

#define yAssF_z_BasicTypes_1J_tStrategyId(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yAssF_tStrategyId(V,E,A) yAssF_z_BasicTypes_1J_tStrategyId(V,E,A)
#define yEqF_z_BasicTypes_1J_tStrategyId(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1J_tStrategyId(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yEqF_tStrategyId(Expr1,Expr2) yEqF_z_BasicTypes_1J_tStrategyId(Expr1,Expr2)
#define yNEqF_tStrategyId(Expr1,Expr2) yNEqF_z_BasicTypes_1J_tStrategyId(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1J_tStrategyId yMkAddr_SDL_Integer

/*****
* NEWTYPE tHeading  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0P_tHeading;
#define ySrtN_tHeading  (&ySrtR_z_BasicTypes_0P_tHeading)
#endif

#define yAssF_z_BasicTypes_0P_tHeading(V,E,A)  V = E
#define yAssF_tHeading(V,E,A) yAssF_z_BasicTypes_0P_tHeading(V,E,A)
#define yEqF_z_BasicTypes_0P_tHeading(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0P_tHeading(Expr1,Expr2)  (Expr1) != (Expr2)
#define yEqF_tHeading(Expr1,Expr2) yEqF_z_BasicTypes_0P_tHeading(Expr1,Expr2)
#define yNEqF_tHeading(Expr1,Expr2) yNEqF_z_BasicTypes_0P_tHeading(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_0P_tHeading yMkAddr_GenericShortEnum

/*****
* OPERATOR h2i
* <<PACKAGE BasicTypes/TYPE tHeading>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),14,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0PE_h2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0PE_h2i;
#define yPrdN_z_BasicTypes_0PE_h2i  (&yPrdR_z_BasicTypes_0PE_h2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0PE_h2i  9
extern char * yRef_z_BasicTypes_0PE_h2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),15,10) */
    z_BasicTypes_0P_tHeading z_BasicTypes_0PE0_lit;
    SDL_Integer *z_BasicTypes_0PE_ProcedureResult;
    z_BasicTypes_0P_tHeading  yDcn_z_BasicTypes_0P_tHeading;
} yVDef_z_BasicTypes_0PE_h2i;
typedef yVDef_z_BasicTypes_0PE_h2i  *yVDP_z_BasicTypes_0PE_h2i;
extern void yFree_z_BasicTypes_0PE_h2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR h2i>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),15,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0PE0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR h2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0PE_ProcedureResult;
#endif

/*****
* OPERATOR i2h
* <<PACKAGE BasicTypes/TYPE tHeading>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),17,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0PF_i2h)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0PF_i2h;
#define yPrdN_z_BasicTypes_0PF_i2h  (&yPrdR_z_BasicTypes_0PF_i2h)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0PF_i2h  9
extern char * yRef_z_BasicTypes_0PF_i2h (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),18,10) */
    SDL_Integer z_BasicTypes_0PF0_int;
    z_BasicTypes_0P_tHeading *z_BasicTypes_0PF_ProcedureResult;
} yVDef_z_BasicTypes_0PF_i2h;
typedef yVDef_z_BasicTypes_0PF_i2h  *yVDP_z_BasicTypes_0PF_i2h;
extern void yFree_z_BasicTypes_0PF_i2h (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR i2h>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),254(20,40),18,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0PF0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR i2h>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0PF_ProcedureResult;
#endif

/*****
* NEWTYPE tDeep  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0Q_tDeep;
#define ySrtN_tDeep  (&ySrtR_z_BasicTypes_0Q_tDeep)
#endif

#define yAssF_z_BasicTypes_0Q_tDeep(V,E,A)  V = E
#define yAssF_tDeep(V,E,A) yAssF_z_BasicTypes_0Q_tDeep(V,E,A)
#define yEqF_z_BasicTypes_0Q_tDeep(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0Q_tDeep(Expr1,Expr2)  (Expr1) != (Expr2)
#define yEqF_tDeep(Expr1,Expr2) yEqF_z_BasicTypes_0Q_tDeep(Expr1,Expr2)
#define yNEqF_tDeep(Expr1,Expr2) yNEqF_z_BasicTypes_0Q_tDeep(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_0Q_tDeep yMkAddr_GenericShortEnum

/*****
* OPERATOR d2i
* <<PACKAGE BasicTypes/TYPE tDeep>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),11,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0QB_d2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0QB_d2i;
#define yPrdN_z_BasicTypes_0QB_d2i  (&yPrdR_z_BasicTypes_0QB_d2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0QB_d2i  6
extern char * yRef_z_BasicTypes_0QB_d2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),12,10) */
    z_BasicTypes_0Q_tDeep z_BasicTypes_0QB0_lit;
    SDL_Integer *z_BasicTypes_0QB_ProcedureResult;
    z_BasicTypes_0Q_tDeep  yDcn_z_BasicTypes_0Q_tDeep;
} yVDef_z_BasicTypes_0QB_d2i;
typedef yVDef_z_BasicTypes_0QB_d2i  *yVDP_z_BasicTypes_0QB_d2i;
extern void yFree_z_BasicTypes_0QB_d2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR d2i>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),12,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QB0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR d2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QB_ProcedureResult;
#endif

/*****
* OPERATOR i2d
* <<PACKAGE BasicTypes/TYPE tDeep>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),14,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0QC_i2d)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0QC_i2d;
#define yPrdN_z_BasicTypes_0QC_i2d  (&yPrdR_z_BasicTypes_0QC_i2d)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0QC_i2d  6
extern char * yRef_z_BasicTypes_0QC_i2d (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),15,10) */
    SDL_Integer z_BasicTypes_0QC0_int;
    z_BasicTypes_0Q_tDeep *z_BasicTypes_0QC_ProcedureResult;
} yVDef_z_BasicTypes_0QC_i2d;
typedef yVDef_z_BasicTypes_0QC_i2d  *yVDP_z_BasicTypes_0QC_i2d;
extern void yFree_z_BasicTypes_0QC_i2d (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR i2d>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),182(70,40),15,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QC0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR i2d>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0QC_ProcedureResult;
#endif

/*****
* NEWTYPE tNameWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0R_tNameWeaponry;
#define ySrtN_tNameWeaponry  (&ySrtR_z_BasicTypes_0R_tNameWeaponry)
#endif

#define yAssF_z_BasicTypes_0R_tNameWeaponry(V,E,A)  V = E
#define yAssF_tNameWeaponry(V,E,A) yAssF_z_BasicTypes_0R_tNameWeaponry(V,E,A)
#define yEqF_z_BasicTypes_0R_tNameWeaponry(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0R_tNameWeaponry(Expr1,Expr2)  (Expr1) != (Expr2)
#define yEqF_tNameWeaponry(Expr1,Expr2) yEqF_z_BasicTypes_0R_tNameWeaponry(Expr1,Expr2)
#define yNEqF_tNameWeaponry(Expr1,Expr2) yNEqF_z_BasicTypes_0R_tNameWeaponry(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_0R_tNameWeaponry yMkAddr_GenericShortEnum

/*****
* OPERATOR nw2i
* <<PACKAGE BasicTypes/TYPE tNameWeaponry>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),10,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0RA_nw2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0RA_nw2i;
#define yPrdN_z_BasicTypes_0RA_nw2i  (&yPrdR_z_BasicTypes_0RA_nw2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0RA_nw2i  5
extern char * yRef_z_BasicTypes_0RA_nw2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),11,10) */
    z_BasicTypes_0R_tNameWeaponry z_BasicTypes_0RA0_lit;
    SDL_Integer *z_BasicTypes_0RA_ProcedureResult;
    z_BasicTypes_0R_tNameWeaponry  yDcn_z_BasicTypes_0R_tNameWeaponry;
} yVDef_z_BasicTypes_0RA_nw2i;
typedef yVDef_z_BasicTypes_0RA_nw2i  *yVDP_z_BasicTypes_0RA_nw2i;
extern void yFree_z_BasicTypes_0RA_nw2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR nw2i>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),11,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RA0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR nw2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RA_ProcedureResult;
#endif

/*****
* OPERATOR i2nw
* <<PACKAGE BasicTypes/TYPE tNameWeaponry>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),13,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0RB_i2nw)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0RB_i2nw;
#define yPrdN_z_BasicTypes_0RB_i2nw  (&yPrdR_z_BasicTypes_0RB_i2nw)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0RB_i2nw  5
extern char * yRef_z_BasicTypes_0RB_i2nw (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),14,10) */
    SDL_Integer z_BasicTypes_0RB0_int;
    z_BasicTypes_0R_tNameWeaponry *z_BasicTypes_0RB_ProcedureResult;
} yVDef_z_BasicTypes_0RB_i2nw;
typedef yVDef_z_BasicTypes_0RB_i2nw  *yVDP_z_BasicTypes_0RB_i2nw;
extern void yFree_z_BasicTypes_0RB_i2nw (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR i2nw>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),179(20,115),14,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RB0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR i2nw>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RB_ProcedureResult;
#endif

/*****
* NEWTYPE tNameShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0S_tNameShip;
#define ySrtN_tNameShip  (&ySrtR_z_BasicTypes_0S_tNameShip)
#endif

#define yAssF_z_BasicTypes_0S_tNameShip(V,E,A)  V = E
#define yAssF_tNameShip(V,E,A) yAssF_z_BasicTypes_0S_tNameShip(V,E,A)
#define yEqF_z_BasicTypes_0S_tNameShip(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0S_tNameShip(Expr1,Expr2)  (Expr1) != (Expr2)
#define yEqF_tNameShip(Expr1,Expr2) yEqF_z_BasicTypes_0S_tNameShip(Expr1,Expr2)
#define yNEqF_tNameShip(Expr1,Expr2) yNEqF_z_BasicTypes_0S_tNameShip(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_0S_tNameShip yMkAddr_GenericShortEnum

/*****
* OPERATOR ns2i
* <<PACKAGE BasicTypes/TYPE tNameShip>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),11,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0SB_ns2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0SB_ns2i;
#define yPrdN_z_BasicTypes_0SB_ns2i  (&yPrdR_z_BasicTypes_0SB_ns2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0SB_ns2i  6
extern char * yRef_z_BasicTypes_0SB_ns2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),12,10) */
    z_BasicTypes_0S_tNameShip z_BasicTypes_0SB0_lit;
    SDL_Integer *z_BasicTypes_0SB_ProcedureResult;
    z_BasicTypes_0S_tNameShip  yDcn_z_BasicTypes_0S_tNameShip;
} yVDef_z_BasicTypes_0SB_ns2i;
typedef yVDef_z_BasicTypes_0SB_ns2i  *yVDP_z_BasicTypes_0SB_ns2i;
extern void yFree_z_BasicTypes_0SB_ns2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR ns2i>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),12,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SB0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR ns2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SB_ProcedureResult;
#endif

/*****
* OPERATOR i2ns
* <<PACKAGE BasicTypes/TYPE tNameShip>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),14,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0SC_i2ns)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0SC_i2ns;
#define yPrdN_z_BasicTypes_0SC_i2ns  (&yPrdR_z_BasicTypes_0SC_i2ns)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0SC_i2ns  6
extern char * yRef_z_BasicTypes_0SC_i2ns (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),15,10) */
    SDL_Integer z_BasicTypes_0SC0_int;
    z_BasicTypes_0S_tNameShip *z_BasicTypes_0SC_ProcedureResult;
} yVDef_z_BasicTypes_0SC_i2ns;
typedef yVDef_z_BasicTypes_0SC_i2ns  *yVDP_z_BasicTypes_0SC_i2ns;
extern void yFree_z_BasicTypes_0SC_i2ns (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR i2ns>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),248(80,115),15,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SC0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR i2ns>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SC_ProcedureResult;
#endif

/*****
* NEWTYPE tHeadingChange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(2),359(20,175),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0T_tHeadingChange;
#define ySrtN_tHeadingChange  (&ySrtR_z_BasicTypes_0T_tHeadingChange)
#endif

#define yAssF_z_BasicTypes_0T_tHeadingChange(V,E,A)  V = E
#define yAssF_tHeadingChange(V,E,A) yAssF_z_BasicTypes_0T_tHeadingChange(V,E,A)
#define yEqF_z_BasicTypes_0T_tHeadingChange(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0T_tHeadingChange(Expr1,Expr2)  (Expr1) != (Expr2)
#define yEqF_tHeadingChange(Expr1,Expr2) yEqF_z_BasicTypes_0T_tHeadingChange(Expr1,Expr2)
#define yNEqF_tHeadingChange(Expr1,Expr2) yNEqF_z_BasicTypes_0T_tHeadingChange(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_0T_tHeadingChange yMkAddr_GenericShortEnum

/*****
* NEWTYPE tCoordinates  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),287(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0U_tCoordinates;
#define ySrtN_tCoordinates  (&ySrtR_z_BasicTypes_0U_tCoordinates)
#endif

#define yAssF_z_BasicTypes_0U_tCoordinates(V,E,A)  V = *(z_BasicTypes_0U_tCoordinates *)(E)
#define yAssF_tCoordinates(V,E,A) yAssF_z_BasicTypes_0U_tCoordinates(V,E,A)
#define yEq_z_BasicTypes_0U_tCoordinates(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0U_tCoordinates)
#define yEqF_z_BasicTypes_0U_tCoordinates(Expr1,Expr2)  yEq_z_BasicTypes_0U_tCoordinates(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0U_tCoordinates(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0U_tCoordinates(Expr1,Expr2) )
#define yEqF_tCoordinates(Expr1,Expr2) yEqF_z_BasicTypes_0U_tCoordinates(Expr1,Expr2)
#define yNEqF_tCoordinates(Expr1,Expr2) yNEqF_z_BasicTypes_0U_tCoordinates(Expr1,Expr2)

/*****
* NEWTYPE tWeaponryCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),146(20,60),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0V_tWeaponryCharacter;
#define ySrtN_tWeaponryCharacter  (&ySrtR_z_BasicTypes_0V_tWeaponryCharacter)
#endif

#define yAssF_z_BasicTypes_0V_tWeaponryCharacter(V,E,A)  V = *(z_BasicTypes_0V_tWeaponryCharacter *)(E)
#define yAssF_tWeaponryCharacter(V,E,A) yAssF_z_BasicTypes_0V_tWeaponryCharacter(V,E,A)
#define yEq_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0V_tWeaponryCharacter)
#define yEqF_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2)  yEq_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2) )
#define yEqF_tWeaponryCharacter(Expr1,Expr2) yEqF_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2)
#define yNEqF_tWeaponryCharacter(Expr1,Expr2) yNEqF_z_BasicTypes_0V_tWeaponryCharacter(Expr1,Expr2)

/*****
* NEWTYPE tShipCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),251(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0W_tShipCharacter;
#define ySrtN_tShipCharacter  (&ySrtR_z_BasicTypes_0W_tShipCharacter)
#endif

#define yAssF_z_BasicTypes_0W_tShipCharacter(V,E,A)  V = *(z_BasicTypes_0W_tShipCharacter *)(E)
#define yAssF_tShipCharacter(V,E,A) yAssF_z_BasicTypes_0W_tShipCharacter(V,E,A)
#define yEq_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0W_tShipCharacter)
#define yEqF_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2)  yEq_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2) )
#define yEqF_tShipCharacter(Expr1,Expr2) yEqF_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2)
#define yNEqF_tShipCharacter(Expr1,Expr2) yNEqF_z_BasicTypes_0W_tShipCharacter(Expr1,Expr2)

/*****
* NEWTYPE tShipCurrentState  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),401(20,125),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0X_tShipCurrentState;
#define ySrtN_tShipCurrentState  (&ySrtR_z_BasicTypes_0X_tShipCurrentState)
#endif

#define yAssF_z_BasicTypes_0X_tShipCurrentState(V,E,A)  V = *(z_BasicTypes_0X_tShipCurrentState *)(E)
#define yAssF_tShipCurrentState(V,E,A) yAssF_z_BasicTypes_0X_tShipCurrentState(V,E,A)
#define yEq_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0X_tShipCurrentState)
#define yEqF_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2)  yEq_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2) )
#define yEqF_tShipCurrentState(Expr1,Expr2) yEqF_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2)
#define yNEqF_tShipCurrentState(Expr1,Expr2) yNEqF_z_BasicTypes_0X_tShipCurrentState(Expr1,Expr2)

/*****
* NEWTYPE tEnemyShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(3),446(20,165),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0Y_tEnemyShip;
#define ySrtN_tEnemyShip  (&ySrtR_z_BasicTypes_0Y_tEnemyShip)
#endif

#define yAssF_z_BasicTypes_0Y_tEnemyShip(V,E,A)  V = *(z_BasicTypes_0Y_tEnemyShip *)(E)
#define yAssF_tEnemyShip(V,E,A) yAssF_z_BasicTypes_0Y_tEnemyShip(V,E,A)
#define yEq_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0Y_tEnemyShip)
#define yEqF_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2)  yEq_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2) )
#define yEqF_tEnemyShip(Expr1,Expr2) yEqF_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2)
#define yNEqF_tEnemyShip(Expr1,Expr2) yNEqF_z_BasicTypes_0Y_tEnemyShip(Expr1,Expr2)

/*****
* NEWTYPE tArrayWeaponryCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),215(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0Z_tArrayWeaponryCharacter;
#define ySrtN_tArrayWeaponryCharacter  (&ySrtR_z_BasicTypes_0Z_tArrayWeaponryCharacter)
#endif

#define yAssF_z_BasicTypes_0Z_tArrayWeaponryCharacter(V,E,A)  V = *(z_BasicTypes_0Z_tArrayWeaponryCharacter *)(E)
#define yAssF_tArrayWeaponryCharacter(V,E,A) yAssF_z_BasicTypes_0Z_tArrayWeaponryCharacter(V,E,A)
#define yEq_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0Z_tArrayWeaponryCharacter)
#define yEqF_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2)  yEq_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2) )
#define yEqF_tArrayWeaponryCharacter(Expr1,Expr2) yEqF_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2)
#define yNEqF_tArrayWeaponryCharacter(Expr1,Expr2) yNEqF_z_BasicTypes_0Z_tArrayWeaponryCharacter(Expr1,Expr2)

/*****
* NEWTYPE tArrayShipsCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),284(20,55),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_10_tArrayShipsCharacter;
#define ySrtN_tArrayShipsCharacter  (&ySrtR_z_BasicTypes_10_tArrayShipsCharacter)
#endif

#define yAssF_z_BasicTypes_10_tArrayShipsCharacter(V,E,A)  V = *(z_BasicTypes_10_tArrayShipsCharacter *)(E)
#define yAssF_tArrayShipsCharacter(V,E,A) yAssF_z_BasicTypes_10_tArrayShipsCharacter(V,E,A)
#define yEq_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_10_tArrayShipsCharacter)
#define yEqF_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2)  yEq_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2) )
#define yEqF_tArrayShipsCharacter(Expr1,Expr2) yEqF_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2)
#define yNEqF_tArrayShipsCharacter(Expr1,Expr2) yNEqF_z_BasicTypes_10_tArrayShipsCharacter(Expr1,Expr2)

/*****
* NEWTYPE tArrayAmountAmmunition  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),344(20,70),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_11_tArrayAmountAmmunition;
#define ySrtN_tArrayAmountAmmunition  (&ySrtR_z_BasicTypes_11_tArrayAmountAmmunition)
#endif

#define yAssF_z_BasicTypes_11_tArrayAmountAmmunition(V,E,A)  V = *(z_BasicTypes_11_tArrayAmountAmmunition *)(E)
#define yAssF_tArrayAmountAmmunition(V,E,A) yAssF_z_BasicTypes_11_tArrayAmountAmmunition(V,E,A)
#define yEq_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_11_tArrayAmountAmmunition)
#define yEqF_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2)  yEq_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2)
#define yNEqF_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2)  ( ! yEq_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2) )
#define yEqF_tArrayAmountAmmunition(Expr1,Expr2) yEqF_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2)
#define yNEqF_tArrayAmountAmmunition(Expr1,Expr2) yNEqF_z_BasicTypes_11_tArrayAmountAmmunition(Expr1,Expr2)

/*****
* NEWTYPE tArrayAmountLaunchUnit  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),341(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_12_tArrayAmountLaunchUnit;
#define ySrtN_tArrayAmountLaunchUnit  (&ySrtR_z_BasicTypes_12_tArrayAmountLaunchUnit)
#endif

#define yAssF_z_BasicTypes_12_tArrayAmountLaunchUnit(V,E,A)  V = *(z_BasicTypes_12_tArrayAmountLaunchUnit *)(E)
#define yAssF_tArrayAmountLaunchUnit(V,E,A) yAssF_z_BasicTypes_12_tArrayAmountLaunchUnit(V,E,A)
#define yEq_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_12_tArrayAmountLaunchUnit)
#define yEqF_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2)  yEq_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2)
#define yNEqF_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2)  ( ! yEq_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2) )
#define yEqF_tArrayAmountLaunchUnit(Expr1,Expr2) yEqF_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2)
#define yNEqF_tArrayAmountLaunchUnit(Expr1,Expr2) yNEqF_z_BasicTypes_12_tArrayAmountLaunchUnit(Expr1,Expr2)

/*****
* NEWTYPE tStringShipCurrentState  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),404(20,100),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_13_tStringShipCurrentState;
#define ySrtN_tStringShipCurrentState  (&ySrtR_z_BasicTypes_13_tStringShipCurrentState)
#endif

#define yEmptystring_z_BasicTypes_13_tStringShipCurrentState(Result) GenString_Emptystring(&ySDL_z_BasicTypes_13_tStringShipCurrentState,Result)
#define yMkString_z_BasicTypes_13_tStringShipCurrentState(P1,Result) (z_BasicTypes_13_tStringShipCurrentState *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_13_tStringShipCurrentState,(xString_Type *)Result)
#define yLength_z_BasicTypes_13_tStringShipCurrentState(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_13_tStringShipCurrentState)
#define yFirst_z_BasicTypes_13_tStringShipCurrentState(P1,Result) (z_BasicTypes_0X_tShipCurrentState*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_13_tStringShipCurrentState,Result)
#define yLast_z_BasicTypes_13_tStringShipCurrentState(P1,Result) (z_BasicTypes_0X_tShipCurrentState*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_13_tStringShipCurrentState,Result)
#define yConcat_z_BasicTypes_13_tStringShipCurrentState(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_13_tStringShipCurrentState,(xString_Type *)Result)
#define ySubString_z_BasicTypes_13_tStringShipCurrentState(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_13_tStringShipCurrentState,(xString_Type *)Result)
#define yAppend_z_BasicTypes_13_tStringShipCurrentState(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_13_tStringShipCurrentState)
#define z_BasicTypes_130_empty yEmptystring_z_BasicTypes_13_tStringShipCurrentState
#define yEmptystring_tStringShipCurrentState yEmptystring_z_BasicTypes_13_tStringShipCurrentState
#define yMkString_tStringShipCurrentState yMkString_z_BasicTypes_13_tStringShipCurrentState
#define yLength_tStringShipCurrentState yLength_z_BasicTypes_13_tStringShipCurrentState
#define yFirst_tStringShipCurrentState yFirst_z_BasicTypes_13_tStringShipCurrentState
#define yLast_tStringShipCurrentState yLast_z_BasicTypes_13_tStringShipCurrentState
#define yConcat_tStringShipCurrentState yConcat_z_BasicTypes_13_tStringShipCurrentState
#define ySubString_tStringShipCurrentState ySubString_z_BasicTypes_13_tStringShipCurrentState
#define yAppend_tStringShipCurrentState yAppend_z_BasicTypes_13_tStringShipCurrentState

#define yAss_z_BasicTypes_13_tStringShipCurrentState(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_13_tStringShipCurrentState)
#define yAssF_z_BasicTypes_13_tStringShipCurrentState(V,E,A)  yAss_z_BasicTypes_13_tStringShipCurrentState(&(V),E,A)
#define yAssF_tStringShipCurrentState(V,E,A) yAssF_z_BasicTypes_13_tStringShipCurrentState(V,E,A)
#define yEq_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_13_tStringShipCurrentState)
#define yEqF_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2)  yEq_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2)
#define yNEqF_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2)  ( ! yEq_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2) )
#define yEqF_tStringShipCurrentState(Expr1,Expr2) yEqF_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2)
#define yNEqF_tStringShipCurrentState(Expr1,Expr2) yNEqF_z_BasicTypes_13_tStringShipCurrentState(Expr1,Expr2)
#define yFree_z_BasicTypes_13_tStringShipCurrentState(P) GenericFreeSort((void **)P, (tSDLTypeInfo *)&ySDL_z_BasicTypes_13_tStringShipCurrentState)
#define yFree_tStringShipCurrentState(P) yFree_z_BasicTypes_13_tStringShipCurrentState(P)
#define yExtr_z_BasicTypes_13_tStringShipCurrentState(V1,V2) ((z_BasicTypes_0X_tShipCurrentState *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_13_tStringShipCurrentState))
#define yAddr_z_BasicTypes_13_tStringShipCurrentState(V1,V2) ((z_BasicTypes_0X_tShipCurrentState *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_13_tStringShipCurrentState))

/*****
* NEWTYPE tStringEnemyShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),449(20,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_14_tStringEnemyShip;
#define ySrtN_tStringEnemyShip  (&ySrtR_z_BasicTypes_14_tStringEnemyShip)
#endif

#define yEmptystring_z_BasicTypes_14_tStringEnemyShip(Result) GenString_Emptystring(&ySDL_z_BasicTypes_14_tStringEnemyShip,Result)
#define yMkString_z_BasicTypes_14_tStringEnemyShip(P1,Result) (z_BasicTypes_14_tStringEnemyShip *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_14_tStringEnemyShip,(xString_Type *)Result)
#define yLength_z_BasicTypes_14_tStringEnemyShip(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_14_tStringEnemyShip)
#define yFirst_z_BasicTypes_14_tStringEnemyShip(P1,Result) (z_BasicTypes_0Y_tEnemyShip*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_14_tStringEnemyShip,Result)
#define yLast_z_BasicTypes_14_tStringEnemyShip(P1,Result) (z_BasicTypes_0Y_tEnemyShip*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_14_tStringEnemyShip,Result)
#define yConcat_z_BasicTypes_14_tStringEnemyShip(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_14_tStringEnemyShip,(xString_Type *)Result)
#define ySubString_z_BasicTypes_14_tStringEnemyShip(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_14_tStringEnemyShip,(xString_Type *)Result)
#define yAppend_z_BasicTypes_14_tStringEnemyShip(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_14_tStringEnemyShip)
#define z_BasicTypes_140_empty yEmptystring_z_BasicTypes_14_tStringEnemyShip
#define yEmptystring_tStringEnemyShip yEmptystring_z_BasicTypes_14_tStringEnemyShip
#define yMkString_tStringEnemyShip yMkString_z_BasicTypes_14_tStringEnemyShip
#define yLength_tStringEnemyShip yLength_z_BasicTypes_14_tStringEnemyShip
#define yFirst_tStringEnemyShip yFirst_z_BasicTypes_14_tStringEnemyShip
#define yLast_tStringEnemyShip yLast_z_BasicTypes_14_tStringEnemyShip
#define yConcat_tStringEnemyShip yConcat_z_BasicTypes_14_tStringEnemyShip
#define ySubString_tStringEnemyShip ySubString_z_BasicTypes_14_tStringEnemyShip
#define yAppend_tStringEnemyShip yAppend_z_BasicTypes_14_tStringEnemyShip

#define yAss_z_BasicTypes_14_tStringEnemyShip(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tStringEnemyShip)
#define yAssF_z_BasicTypes_14_tStringEnemyShip(V,E,A)  yAss_z_BasicTypes_14_tStringEnemyShip(&(V),E,A)
#define yAssF_tStringEnemyShip(V,E,A) yAssF_z_BasicTypes_14_tStringEnemyShip(V,E,A)
#define yEq_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tStringEnemyShip)
#define yEqF_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2)  yEq_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2)
#define yNEqF_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2)  ( ! yEq_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2) )
#define yEqF_tStringEnemyShip(Expr1,Expr2) yEqF_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2)
#define yNEqF_tStringEnemyShip(Expr1,Expr2) yNEqF_z_BasicTypes_14_tStringEnemyShip(Expr1,Expr2)
#define yFree_z_BasicTypes_14_tStringEnemyShip(P) GenericFreeSort((void **)P, (tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tStringEnemyShip)
#define yFree_tStringEnemyShip(P) yFree_z_BasicTypes_14_tStringEnemyShip(P)
#define yExtr_z_BasicTypes_14_tStringEnemyShip(V1,V2) ((z_BasicTypes_0Y_tEnemyShip *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_14_tStringEnemyShip))
#define yAddr_z_BasicTypes_14_tStringEnemyShip(V1,V2) ((z_BasicTypes_0Y_tEnemyShip *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_14_tStringEnemyShip))

/*****
* NEWTYPE tStringShotsList  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Battleships\Packages\BasicTypes.sun(4),362(20,130),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_15_tStringShotsList;
#define ySrtN_tStringShotsList  (&ySrtR_z_BasicTypes_15_tStringShotsList)
#endif

#define yEmptystring_z_BasicTypes_15_tStringShotsList(Result) GenString_Emptystring(&ySDL_z_BasicTypes_15_tStringShotsList,Result)
#define yMkString_z_BasicTypes_15_tStringShotsList(P1,Result) (z_BasicTypes_15_tStringShotsList *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_15_tStringShotsList,(xString_Type *)Result)
#define yLength_z_BasicTypes_15_tStringShotsList(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringShotsList)
#define yFirst_z_BasicTypes_15_tStringShotsList(P1,Result) (z_BasicTypes_0U_tCoordinates*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringShotsList,Result)
#define yLast_z_BasicTypes_15_tStringShotsList(P1,Result) (z_BasicTypes_0U_tCoordinates*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringShotsList,Result)
#define yConcat_z_BasicTypes_15_tStringShotsList(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_15_tStringShotsList,(xString_Type *)Result)
#define ySubString_z_BasicTypes_15_tStringShotsList(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_15_tStringShotsList,(xString_Type *)Result)
#define yAppend_z_BasicTypes_15_tStringShotsList(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_15_tStringShotsList)
#define z_BasicTypes_150_empty yEmptystring_z_BasicTypes_15_tStringShotsList
#define yEmptystring_tStringShotsList yEmptystring_z_BasicTypes_15_tStringShotsList
#define yMkString_tStringShotsList yMkString_z_BasicTypes_15_tStringShotsList
#define yLength_tStringShotsList yLength_z_BasicTypes_15_tStringShotsList
#define yFirst_tStringShotsList yFirst_z_BasicTypes_15_tStringShotsList
#define yLast_tStringShotsList yLast_z_BasicTypes_15_tStringShotsList
#define yConcat_tStringShotsList yConcat_z_BasicTypes_15_tStringShotsList
#define ySubString_tStringShotsList ySubString_z_BasicTypes_15_tStringShotsList
#define yAppend_tStringShotsList yAppend_z_BasicTypes_15_tStringShotsList

#define yAss_z_BasicTypes_15_tStringShotsList(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringShotsList)
#define yAssF_z_BasicTypes_15_tStringShotsList(V,E,A)  yAss_z_BasicTypes_15_tStringShotsList(&(V),E,A)
#define yAssF_tStringShotsList(V,E,A) yAssF_z_BasicTypes_15_tStringShotsList(V,E,A)
#define yEq_z_BasicTypes_15_tStringShotsList(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringShotsList)
#define yEqF_z_BasicTypes_15_tStringShotsList(Expr1,Expr2)  yEq_z_BasicTypes_15_tStringShotsList(Expr1,Expr2)
#define yNEqF_z_BasicTypes_15_tStringShotsList(Expr1,Expr2)  ( ! yEq_z_BasicTypes_15_tStringShotsList(Expr1,Expr2) )
#define yEqF_tStringShotsList(Expr1,Expr2) yEqF_z_BasicTypes_15_tStringShotsList(Expr1,Expr2)
#define yNEqF_tStringShotsList(Expr1,Expr2) yNEqF_z_BasicTypes_15_tStringShotsList(Expr1,Expr2)
#define yFree_z_BasicTypes_15_tStringShotsList(P) GenericFreeSort((void **)P, (tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringShotsList)
#define yFree_tStringShotsList(P) yFree_z_BasicTypes_15_tStringShotsList(P)
#define yExtr_z_BasicTypes_15_tStringShotsList(V1,V2) ((z_BasicTypes_0U_tCoordinates *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_15_tStringShotsList))
#define yAddr_z_BasicTypes_15_tStringShotsList(V1,V2) ((z_BasicTypes_0U_tCoordinates *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_15_tStringShotsList))
#endif
   /* X_IFC_z_BasicTypes__BasicTypes */
